@{
    ViewBag.CommonContext.PageTitle = "Edit Product Cost of Goods";
}


<style>
    table.table td {
        height: 70px !important;
        font-size: 14px;
        vertical-align: middle !important;
    }

    table.table th {
        font-size: 14px !important;
        font-weight: 700;
        color: #777;
        height: 60px;
    }

    #product-cogs tr td:nth-child(1) {
        width: 15%;
    }

    #product-cogs tr td:nth-child(2) {
        width: 25%;
    }

    #product-cogs tr td:nth-child(3) {
        width: 14%;
    }

    #product-cogs tr td:nth-child(4) {
        width: 13%;
        text-align: center;
    }

    #product-cogs tr td:nth-child(5) {
        width: 13%;
        text-align: center;
    }

    #product-cogs tr td:nth-child(6) {
        width: 10%;
        text-align: center;
    }

    #product-cogs tr td:nth-child(7) {
        width: 10%;
        text-align: center;
    }

    input[type='text'] {
        width: 100px;
    }
</style>

<!-- KnockoutJS Templates -->
@Html.Partial("_PagingWidget")
@Html.Partial("_ProductFilterWidget")
@Html.Partial("_MoneyRangeWidget")
@Html.Partial("_PageFooter")

<script type="text/html" id="Page-Header">
    <div id="fixed-positioning-container">
        <div id="top-header-sleeve" style="height: 210px;">

            <!-- This element will track with the scrollbar via JavaScript wiring to onscroll-->
            <div id="top-header">

                <div class="row" style="padding-left: 25px; padding-right: 25px;">
                    <!-- Filtering Widget -->
                    <div class="col-lg-6" style="padding-top: 20px;">
                        <div class="pull-left;"
                             data-bind="template: { name: 'Product-Filter-Widget', data: $root.FilterModel }">
                        </div>
                    </div>

                    <!-- Paging Widget -->
                    <div class="col-lg-6">
                        <div style="height: 20px;" class="visible-lg"></div>
                        <div style="min-width: 500px;" data-bind="template: { name: 'Paging-Widget', data: $root.PagingModel }">
                        </div>
                    </div>
                </div>

                <!-- Create Purchase Order Button -->
                <!-- <div class="visible-md visible-lg row header-horz-padding">
                    <div class="col-xs-12" style="text-align: right;">
                        <a style="width: 225px;" class="form-control btn btn-default" href="#"><i class="glyphicon glyphicon-copy"></i> &nbsp;&nbsp;Create Purchase Order</a>
                    </div>
                </div>-->

                <!-- Table Headings - note: measured table rendering height is 61px, top border offset is 20px; -->
                <div class="header-horz-padding" style="position: absolute; top: 129px;">
                    <table class="table" id="heading">
                        <thead>
                        <tr>
                            <th class="order-by-column"
                                data-bind="click: function() { SortByClick(0) }">
                                Vendor

                                <span data-bind="visible: SortByColumnIndex() == 0">
                                    <span data-bind="template: 'Sorting-Arrows-Active'"></span>
                                </span>
                                <span data-bind="visible: SortByColumnIndex() != 0">                                    
                                    <span data-bind="template:'Sorting-Arrows-Inactive'"></span>
                                </span>
                            </th>

                            <th class="order-by-column" data-bind="click: function() { SortByClick(1); }">
                                Product

                                <span data-bind="visible: SortByColumnIndex() == 1">
                                    <span data-bind="template: 'Sorting-Arrows-Active'"></span>
                                </span>
                                <span data-bind="visible: SortByColumnIndex() != 1">
                                    <span data-bind="template:'Sorting-Arrows-Inactive'"></span>
                                </span>
                            </th>

                            <th class="order-by-column" data-bind="click: function() { SortByClick(2); }">
                                Inventory

                                <span data-bind="visible: SortByColumnIndex() == 2">
                                    <span data-bind="template: 'Sorting-Arrows-Active'"></span>
                                </span>
                                <span data-bind="visible: SortByColumnIndex() != 2">
                                    <span data-bind="template:'Sorting-Arrows-Inactive'"></span>
                                </span>
                            </th>
                            
                            <th class="order-by-column" data-bind="click: function() { SortByClick(3); }" style="text-align: center;">
                                Price

                                <span data-bind="visible: SortByColumnIndex() == 3">
                                    <span data-bind="template: 'Sorting-Arrows-Active'"></span>
                                </span>
                                <span data-bind="visible: SortByColumnIndex() != 3">
                                    <span data-bind="template:'Sorting-Arrows-Inactive'"></span>
                                </span>                            
                            </th>
                            
                            <th class="order-by-column" data-bind="click: function() { SortByClick(4); }" style="text-align: center;">
                                CoGS

                                <span data-bind="visible: SortByColumnIndex() == 4">
                                    <span data-bind="template: 'Sorting-Arrows-Active'"></span>
                                </span>
                                <span data-bind="visible: SortByColumnIndex() != 4">
                                    <span data-bind="template:'Sorting-Arrows-Inactive'"></span>
                                </span>
                            </th>
                            <th class="not-allowed" style="text-align: center; color:#AAA;">Stocked Directly</th>
                            <th class="not-allowed" style="text-align: center; color:#AAA;">Exclude</th>
                        </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/html" id="Sorting-Arrows-Active">
    <span data-bind="if: $root.SortByDirectionDown">
        <i class="glyphicon glyphicon-triangle-bottom"></i>
    </span>
    <span data-bind="ifnot: $root.SortByDirectionDown">
        <i class="glyphicon glyphicon-triangle-top"></i>
    </span>
</script>

<script type="text/html" id="Sorting-Arrows-Inactive">
    <!--&nbsp;<i style="font-size:0.8em;" class="glyphicon glyphicon-sort"></i>-->
</script>

<script type="text/html" id="Main-Template">
    <div data-bind="template: { name: 'Page-Header'}"></div>

    <div class="container" style="margin: 0; width: 100%; padding-left: 20px; padding-right: 20px;">
        <div style="position: relative; min-width: 900px; margin-top: 209px; background-color: #FFF; padding-left: 25px; padding-right: 25px;">
            <table id="product-cogs" class="table" style="width: 100%; height: 100%; margin: 0;">
                <tbody data-bind="foreach: $root.CurrentGrid">
                <tr>
                    <td class="overflow-gracefully" data-bind="text: Vendor"></td>
                    <td class="overflow-gracefully"><a href="CoGSProduct.html" data-bind="text: ProductTitle"></a></td>
                    <td><span data-bind="text: InventoryCount"></span> in stock<br/>
                        (<span data-bind="text: VariantCount"></span> variants)</td>

                    <td data-bind="template: { name: 'Money-Range-Widget-Vertical', data: Price }">
                    </td>

                    <td>
                        <a href="#" data-bind="click: $root.LaunchBulkEditPopup">
                            <span data-bind="template: { name: 'Money-Range-Widget-Vertical', data: Cogs }">
                            </span>
                        </a>
                    </td>
                    <td>12 of 100</td>
                    <td><input type="checkbox" data-bind="click: $parent.ExcludedClick"/></td>
                </tr>
                </tbody>
            </table>

            <!--
               <div style="font-size:0.70em" data-bind="if: CogsDetailUsed == 1">(averages)</div>

               CogsData: {
               /*** 1 = Simple, 2 = Range of Simple, 3 = Range of Averages **/
               CogsDataType: 1,
               CogsAmount: 18.00,
               CogsCurrency: 1,
               },
                   -->

        </div>
    </div>

    <div data-bind="template: { name: 'Page-Footer'}"></div>
</script>

<!-- KnockoutJS Root View --><!-- data: $root.EndlessGlider, -->
<div data-bind="template: { name: 'Main-Template' }">
</div>


<script>
    var ProfitWise = ProfitWise || {};



    ProfitWise.EditCogsModel = function () {
        var self = this;

        self.CurrentGrid = ko.observableArray();        
        self.PagingModel = new ProfitWiseWidgets.PagingModel();
        self.FilterModel = new ProfitWiseWidgets.ProductFilterModel();
        self.FilterModel.RegisterCallbackFunction(function() { alert('Search! OMG!!'); });


        self.SortByColumns = [
            'Vendor', 'Product', 'Inventory', 'Price', 'CoGS'
        ];

        self.SortByColumnIndex = ko.observable(0);
        self.SortByDirectionDown = ko.observable(true);
        
        self.SortByClick = function(index) {
            if (index == self.SortByColumnIndex()) {
                self.SortByDirectionDown(!self.SortByDirectionDown());
            } else {
                self.SortByDirectionDown(true);
            }
            self.SortByColumnIndex(index);
        }


        self.LoadDataForCurrentPage = function (pageNumber, pageSize) {            
            pageNumber = pageNumber || 1;
            pageSize = pageSize || Number(self.PagingModel.PageSize());

            // #1 - load only that page of numbers
            // TODO => invoke external service
            var data = window.cogsDataService(pageNumber, pageSize);

            // #2 - how many records match that criteria
            // TODO => invoke external service
            self.PagingModel.RecordCount(2000);

            self.CurrentGrid.removeAll();
            self.CurrentGrid(data);
        };

        self.LoadSingleProductRecord = function (shopifyProductId) {
            var item =
                AQ(self.CurrentGrid())
                .firstOrDefault(function (item) {
                        return item.Id == shopifyProductId;
                    });

            self.CurrentGrid.replace(item,
                {
                    Id: shopifyProductId,
                    Vendor: item.Vendor,
                    ProductTitle: item.ProductTitle,
                    InventoryCount: 175,
                    VariantCount: 12,
                    Price: {
                        CurrencyId: 1,
                        AmountLow: 34.00,
                        AmountHigh: 42.00,
                        IncludesAverages: 0,
                    },
                    Cogs: {
                        CurrencyId: 3,
                        AmountLow: 8000.00,
                        AmountHigh: 9300.00,
                        IncludesAverages: 1,
                    },
                    NumberStockedDirectly: 12,
                    NumberExcludeVariants: 0,
                });
        }

        self.PagingModel.SubscribeCallbackFunction(self.LoadDataForCurrentPage);

        self.LaunchBulkEditPopup = function (model) {
            ProfitWiseShopify.LaunchBulkEditPopUp(model.Id,
                    function(shopifyProductId) {
                        self.LoadSingleProductRecord(shopifyProductId);                        
                    });
        }

        self.StockedDirectlyClick = function(model) {
            alert("Stocked Directly Click");
        };
            
        self.ExcludedClick = function (model) {
            alert("Stocked Directly Click");
        };

        return self;
    };

    $(document)
        .ready(function () {
            ProfitWiseFunctions.TableHeaderWidthInit("table#product-cogs tbody tr td", "table#heading thead tr th");
            ProfitWiseFunctions.FixedHeaderScrollingInit("#top-header");
            ProfitWiseFunctions.PopOverAutoClose();

            var model = new ProfitWise.EditCogsModel();
            model.LoadDataForCurrentPage();
            
            ko.applyBindings(model);
            window.modeltmp = model;

            // $root
            // model.CurrentGrid [ 1 to N ]
            // model.LaunchBulkEditPopup
        });
</script>

<script>
    window.cogsDataService = function (pageNumber, pageSize) {
        var output = [];
        var startRecord = (pageNumber - 1) * pageSize + 1;
        var endRecord = startRecord + pageSize - 1;
        
        for (var count = startRecord; count <= endRecord; count++) {
            output.push({
                Id: count,
                Vendor: '3D Universe 1234567890 1234567890 ' + count,
                ProductTitle: '3D Universe PLA ' + count + '2.85 mm 12345678890',
                InventoryCount: 175,
                VariantCount: 12,
                Price: {
                    CurrencyId: 1,
                    AmountLow: 34.00,
                    AmountHigh: 42.00,
                    IncludesAverages: 0,
                },
                Cogs: {
                    CurrencyId: 2,
                    AmountLow: 1000000.00,
                    AmountHigh: 2300000.00,
                    IncludesAverages: 1,
                },
                NumberStockedDirectly: 12,
                NumberExcludeVariants: 0,
            });
        };

        return output;
    }
</script>

