@Html.Partial("~/Views/UserMain/_FilterPagingWidget.cshtml")
@Html.Partial("~/Views/UserMain/_SelectionModel.cshtml")
@Html.Partial("~/Views/UserMain/_ReportEditorProductType.cshtml")
@Html.Partial("~/Views/UserMain/_ReportEditorVendor.cshtml")
@Html.Partial("~/Views/UserMain/_ReportEditorMasterProduct.cshtml")
@Html.Partial("~/Views/UserMain/_ReportEditorEmptyResults.cshtml")


<style>
    table#product-types td {
        height: 70px !important;
        font-size: 14px;
        vertical-align: middle !important;
    }

    table#product-types tr td:nth-child(1) {
        width: 10%;
    }
    table#product-types tr td:nth-child(2) {
        width: 45%;
    }
    table#product-types tr td:nth-child(3) {
        width: 45%;
    }
</style>

<!-- Requires a ReportEditorWidget passed in KO template "data" parameter -->
<script type="text/html" id="Report-Editor-Header">
    <!-- Spacer - 15px -->
    <div class="vert-spacer" style="height: 15px;"></div>

    <!-- Nav tabs - 43px -->
    <div class="row-fluid" style="height: 43px;">
        <div class="col-xs-12 no-side-padding">
            <ul class="nav nav-tabs" role="tablist" style="position: absolute; width: 100%;">
                <li role="presentation" class="active">
                    <a href="#report-filter-product-type"
                       data-bind="click: ProductTypeClick"
                       aria-controls="home" role="tab" data-toggle="tab">Product Types</a>
                </li>
                <li role="presentation">
                    <a href="#report-filter-vendor"
                       data-bind="click: VendorClick"
                       aria-controls="profile" role="tab" data-toggle="tab">Vendors</a>
                </li>
                <li role="presentation">
                    <a href="#report-filter-product"
                       data-bind="click: MasterProductClick"
                       aria-controls="messages" role="tab" data-toggle="tab">Products</a>
                </li>
                <li role="presentation">
                    <a href="#report-filter-sku"
                       data-bind="click: SkuClick"
                       aria-controls="settings" role="tab" data-toggle="tab">SKUs</a>
                </li>
            </ul>

            <div style="position: absolute; width: 100%; height: 0px; overflow: visible; text-align: right;">
                <a href="#" class="btn btn-primary btn-sm" style="width: 95px;" data-bind="click: CancelButtonClick">
                    Cancel &nbsp;<i class="glyphicon glyphicon-remove"></i>
                </a>

                <a href="#" class="btn btn-primary btn-sm" style="width: 95px;" data-bind="click: OkButtonClick">
                    Ok &nbsp;<i class="glyphicon glyphicon-ok"></i>
                </a>
            </div>
        </div>
    </div>

    <!-- Tab panes -->
    <div class="tab-content" style="clear: both;">
        <!-- Height - 120px -->
        <div id="report-filter-product-type" role="tabpanel" class="tab-pane active reduced-padding"
             data-bind="template: { name: 'Report-Editor-Header-Product-Type', data: ReportProductTypeModel }">
        </div>        
        <div id="report-filter-vendor" role="tabpanel" class="tab-pane reduced-padding"
             data-bind="template: { name: 'Report-Editor-Header-Vendor', data: ReportVendorModel }">
        </div>
        <div id="report-filter-product" role="tabpanel" class="tab-pane reduced-padding"
             data-bind="template: { name: 'Report-Editor-Header-Master-Product', data: ReportMasterProductModel }">
        </div>
    </div>
</script>



<!-- Requires a ReportEditorWidget passed in KO template "data" parameter -->
<script type="text/html" id="Report-Editor-Body">
    <div data-bind="if: SelectedFilter() == ReportFilterTypes.ProductType">
        <div data-bind="template: { name: 'Report-Editor-Body-Product-Type', data: ReportProductTypeModel }"></div>
    </div>

    <div data-bind="if: SelectedFilter() == ReportFilterTypes.Vendor">
        <div data-bind="template: { name: 'Report-Editor-Body-Vendor', data: ReportVendorModel }"></div>
    </div>

    <div data-bind="if: SelectedFilter() == ReportFilterTypes.Product">
        <div data-bind="template: { name: 'Report-Editor-Body-Master-Product', data: ReportMasterProductModel }"></div>
    </div>

    <div data-bind="if: SelectedFilter() == ReportFilterTypes.Sku">
        <div data-bind="template: { name: 'Report-Editor-Body-Sku' }"></div>
    </div>
</script>

<script type="text/html" id="Report-Editor-Body-Vendor"></script>
<script type="text/html" id="Report-Editor-Body-Product"></script>
<script type="text/html" id="Report-Editor-Body-Sku"></script>

<script>
    ProfitWiseWidgets = ProfitWiseWidgets || {};

    ProfitWiseWidgets.ReportEditorModel = function () {
        var self = this;

        self.ReportFilterTypes = {
            ProductType: "ProductType",
            Vendor: "Vendor",
            Product: "Product",
            Sku: "Skus"
        };

        self.ReportId = ko.observable();
        self.SelectedFilter = ko.observable();
        
        self.CancelCallback = function () { };
        self.OkCallback = function () { };

        // This function will get invoked on the OK button, or tab change
        self.InternalTransistionCallback = function() {
        };

        // This is for notifying external subscribers that elect to set it
        self.ExternalTransistionCallback = function () {
        };

        self.ExecuteTransition = function() {
            self.InternalTransistionCallback();
            self.ExternalTransistionCallback();
        };


        self.OkButtonClick = function () {
            self.ReportProductTypeModel.Save();
            self.OkCallback();
        };

        self.CancelButtonClick = function() {
            self.CancelCallback();
        };

        self.ProductTypeClick = function () {
            if (self.SelectedFilter() == self.ReportFilterTypes.ProductType) {
                return;
            }
            
            self.ExecuteTransition();
            self.ReportProductTypeModel.Refresh(self.ReportId());
            
            self.InternalTransistionCallback = self.ReportProductTypeModel.Save;
            self.SelectedFilter(self.ReportFilterTypes.ProductType);
            ProfitWiseFunctions.BsActivateTab("report-filter-product-type");
        };

        self.VendorClick = function () {
            if (self.SelectedFilter() == self.ReportFilterTypes.Vendor) {
                return;
            }

            self.ExecuteTransition();
            self.ReportVendorModel.Refresh(self.ReportId());

            self.InternalTransistionCallback = self.ReportVendorModel.Save;
            self.SelectedFilter(self.ReportFilterTypes.Vendor);
            ProfitWiseFunctions.BsActivateTab("report-filter-vendor");
        };

        self.MasterProductClick = function () {
            if (self.SelectedFilter() == self.ReportFilterTypes.Product) {
                return;
            }

            self.ExecuteTransition();
            self.ReportMasterProductModel.Refresh(self.ReportId());

            self.InternalTransistionCallback = self.ReportMasterProductModel.Save;
            self.SelectedFilter(self.ReportFilterTypes.Product);
            ProfitWiseFunctions.BsActivateTab("report-filter-product");
        };

        self.SkuClick = function () {
            self.SelectedFilter(self.ReportFilterTypes.Sku);
            ProfitWiseFunctions.BsActivateTab("report-filter-sku");
        };
        
        self.GotoNextTab = function() {
            // TODO => build this out
        };

        self.GotoPreviousTab = function() {
            // TODO => build this out
        };

        self.RegisterCancelCallback = function (callback) {
            self.CancelCallback = callback;
        };
        self.RegisterOkCallback = function (callback) {
            self.OkCallback = callback;
        };

        self.LoadReport = function (reportId) {
            self.ReportId(reportId);
            self.ProductTypeClick();
        };

        // Wire in the individual Report Editor modules
        self.ReportProductTypeModel = new ProfitWiseWidgets.ReportProductTypeModel(self);
        self.ReportProductTypeModel.GotoNextCallback = self.VendorClick;

        self.ReportVendorModel = new ProfitWiseWidgets.ReportVendorModel(self);
        self.ReportVendorModel.GotoPreviousCallback = self.ProductTypeClick ;
        self.ReportVendorModel.GotoNextCallback = self.MasterProductClick;

        self.ReportMasterProductModel = new ProfitWiseWidgets.ReportMasterProductModel(self);
        self.ReportMasterProductModel.GotoPreviousCallback = self.VendorClick;
        self.ReportMasterProductModel.GotoNextCallback = function () { alert('TBD'); };


        /* TODO - move these
        self.SkuFilterModel = new ProfitWiseWidgets.FilterPagingWidgetModel("Search for SKU by Title");        
        */

        return self;
    };
</script>

