
<script type="text/html" id="Report-View-Synopsis">
    <div data-bind="with: CurrentReport">
        <div class="popover-container">
            <h4 style="display: inline-block" data-bind="text: Name"></h4>
        </div>

        <div style="font-size: 14px; font-weight: 600; color: #666; line-height: 24px;">
            <span data-bind="text: GroupAndOrderingDigest"></span>
            <br />
            <span style="font-weight: 400" data-bind="text:FilterDigest"></span>
        </div>
    </div>
</script>

<script type="text/html" id="Report-View-Interface">

    <div class="btn-group pull-right">
        <a href="#" class="btn btn-sm btn-default dropdown-toggle"
           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Select Report <span class="caret"></span>
        </a>
        <ul class="dropdown-menu" style="width:260px;">  
            <li><a href="#" data-bind="click: OverallProfitabilityClick">Overall Profitability</a></li>

            <li role="separator" class="divider"></li>
            
            <!-- ko if: Reports().length == 0 -->
            <li><a href="#">(No custom reports defined yet)</a></li>
            <!-- /ko -->


            <!-- ko foreach: Reports -->
            <li><a href="#" data-bind="click: $parent.ReportClick, text: Name"></a></li>
            <!-- /ko -->
        </ul>
    </div>

    <div class="pull-right" style="margin-right: 3px;">
        <div data-bind="ifnot:ReportEditorVisible">
            <a href="" class="btn btn-sm btn-default" data-bind="click: EditReport">
                Edit Report <i class="glyphicon glyphicon-pencil"></i>
            </a>
        </div>
        <div data-bind="if:ReportEditorVisible">
            <a href="" class="btn btn-sm btn-default disabled" data-bind="click: SaveReport">
                Edit Report <i class="glyphicon glyphicon-pencil"></i>
            </a>
        </div>
    </div>

    <div class="pull-right btn-group" style="margin-right: 3px;">
        <button type="button" class="btn btn-sm btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">...</button>

        <ul class="dropdown-menu">
            <li><a href="#">Save As</a></li>
            <li><a href="#">Rename</a></li>
            <li><a href="#">Delete</a></li>
        </ul>
    </div>


    <div style="clear: both; height: 10px;"></div>

    <div id="date-range-picker-parent" class="pull-right" style="width: 219px; position: relative;">
        <input type="text" class="form-control" style="width: 100%; font-size: 13px;" id="date-range-picker" />
        <i class="glyphicon glyphicon-calendar date-range-picker-icon"></i>
    </div>

    <div style="clear: both; height: 10px;"></div>
</script>

<script>
    var ProfitWiseWidgets = ProfitWiseWidgets || {};

    ProfitWiseWidgets.Report = function () {
        self.ReportId = ko.observable();
        self.Name = ko.observable();
        self.GroupedBy = ko.observable();
        self.FilterDigest = ko.observable();
    };

    ProfitWiseWidgets.ReportViewModel = function () {
        var self = this;

        self.ReportEditorVisible = ko.observable(false);
        self.DateRange = ko.observable();
        self.CurrentReport = ko.observable();
        self.PreviousReport = ko.observable();
        self.Reports = ko.observable([{
                Name: 'Test1',
            }, {
                Name: 'Test2',
            }, {
                Name: 'Test3',
            }
        ]);

        self.OverallProfitabilityClick = function() {
            var ajax = new ProfitWiseFunctions.Ajax();
            ajax.HttpGet(
                "/ReportService/OverallProfitability",
                function (data) {
                    console.log(data);
                    self.CurrentReport(data.report);
                    callback();
                });
        };

        self.ReportClick = function(data) {
            console.log(data);
        }

        self.ReportEditorModel = new ProfitWiseWidgets.ReportEditorModel();

        self.CreateDateRangePicker = function () {
            $(".date-range-picker-icon").click(function () {
                $(this).parent().find('input').click();
            });

            $('#date-range-picker')
                .daterangepicker({
                    "parentEl": "#date-range-picker-parent",
                    "startDate": "10/01/2016",
                    "endDate": "10/07/2016",
                    "alwaysShowCalendars": true,
                    "linkedCalendars": false,
                    "applyClass": "btn-primary",
                    "ranges": {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                        'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                        'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                        'This Year': [moment().startOf('year'), moment().endOf('year')],
                        'Last Year': [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')],
                    },
                    "opens": "left",
                },
                    function (start, end, label) {
                        alert(start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
                    });
        };

        self.EditReport = function () {
            self.ReportEditorVisible(true);

            var reportId = self.ReportView.CurrentReport().ReportId();

            self.ReportEditorModel.CopyAndLoad(reportId);
        };

        self.SaveReport = function () {
            self.ReportEditorVisible(false);
        };

        self.ReportEditorModel.OkCallback = function () {
            self.ReportEditorVisible(false);
        };

        self.SelectReport = function() {
            // DO STUFF WITH REPORT

            self.SelectReportCallback();
        };

        self.SelectReportCallback = function() {

        };

        self.LoadReports = function (callback) {
            var ajax = new ProfitWiseFunctions.Ajax();
            ajax.HttpGet(
                "/ReportService/All",
                function (data) {
                    console.log(data);
                    self.Reports(data.reports);
                    callback();
                });
        };

        return self;
    };
</script>

