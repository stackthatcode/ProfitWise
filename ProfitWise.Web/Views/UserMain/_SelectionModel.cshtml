<script>
    ProfitWiseWidgets = ProfitWiseWidgets || {};

    ProfitWiseWidgets.SelectionModel = function () {
        var self = this;

        self.AllSelected = ko.observable(true);
        self.AllItems = ko.observableArray();
        self.MarkedItems = ko.observableArray();

        self.Callback = function () {
        };

        self.IsSelected = function (item) {
            return AQ(self.MarkedItems()).contains(item) || self.AllSelected();
        };

        // Need to pass item.ProductType to this
        self.ToggleSelect = function (item) {
            var currentlySelected = self.IsSelected(item);

            if (currentlySelected) {
                if (self.AllSelected()) {
                    self.MarkedItems.removeAll();
                    self.MarkedItems(self.AllItems.slice(0));
                    
                    self.AllSelected(false);
                }
                self.UnmarkItem(item);
            } else {
                self.MarkItem(item);

                if (self.AllAreItemsAreMarked()) {
                    console.log("Selecting all items");
                    self.SelectAll();
                }
            }
        };

        self.MarkItem = function (item) {
            self.MarkedItems.push(item);
            self.Callback();
        };

        self.UnmarkItem = function (item) {
            self.MarkedItems.remove(function (n) {
                return n == item;
            });
            self.Callback();
        };

        self.AllAreItemsAreMarked = ko.computed(function () {
            console.log(self.MarkedItems().length + ' ' + self.AllItems().length);

            return self.MarkedItems().length == self.AllItems().length;
        });

        self.SelectAll = function () {
            self.AllSelected(true);
            self.MarkedItems.removeAll();
            self.Callback();
        }

        self.DeselectAll = function () {
            self.AllSelected(false);
            self.MarkedItems.removeAll();
            self.Callback();
        }

        return self;
    };
</script>
