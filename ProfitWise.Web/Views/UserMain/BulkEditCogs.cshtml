@using Push.Foundation.Web.Json
@model ProfitWise.Data.Model.PwCogsProduct
@{
    ViewBag.CommonContext.PageTitle = "Bulk Edit Product Variant CoGS";
    Layout = "~/Views/Shared/_UserLayoutDialogBox.cshtml";
}

@Html.Partial("_MoneyEditorWidget")
@Html.Partial("_MoneyRangeWidget")

<script type="text/html" id="Main-Template">
    <form class="form-horizontal"  onsubmit="return false;">
        <div class="form-group" style="height: 32px;">
            <label class="col-xs-3 control-label" style="color: #777;">Current Product</label>

            <div class="col-xs-7">
                <span data-bind="text: ProductTitle"></span>
            </div>
            <div class="col-xs-2">
            </div>
        </div>

        <div class="form-group" style="height: 32px;">
            <label class="col-xs-3 control-label" style="color: #777;">Current CoGS</label>

            <div class="col-xs-7">
                <span data-bind="template: { name: 'Money-Range-Widget-Horizontal', data: CurrentCogs }">
                </span>

            </div>
            <div class="col-xs-2">
            </div>
        </div>

        <div class="form-group" style="height: 32px;">
            <label class="col-xs-3 control-label" style="color: #777; display: inline-block; margin-top: 8px;">Enter New CoGS</label>

            <div class="col-xs-5" style="text-align: left;">
                <div data-bind="template: { name: 'Money-Editor-Widget', data: $root.CogsAmountEditorModel }"></div>
            </div>

            <div class="col-xs-4">
            </div>
        </div>

        <div style="height: 15px;"></div>

        <div class="form-group">
            <div class="col-xs-12">
                <div class="alert alert-info" role="alert">
                    <strong>Note</strong> You can set the currency without entering a new CoGS value, also
                </div>
            </div>
            <div class="col-xs-12">
                <div class="alert alert-warning" role="alert">
                    <strong>WARNING!</strong> Clicking "OK" will overwrite all CoGS data for all Variants
                </div>
            </div>
        </div>

        <div class="form-group" style="text-align: right;">
            <div class="col-xs-12">
                <input type="button" class="btn btn-default" value="Cancel" data-bind="click: CancelButtonClick"/>
                <input type="button" class="btn btn-primary" value="Ok" data-bind="click: OkButtonClick"/>
            </div>
        </div>

        <div style="height:30px;"></div>
    </form>
</script>

<div data-bind="template: { name: 'Main-Template', afterRender: function() { $('input.money-editor-text').focus(); } }">
</div>

<script>
    // Data pass via PwCogsProduct C# object
    var data = @Html.Raw(Model.SerializeToJson());

    $(document)
        .ready(function () {
            var ProfitWise = ProfitWise || {};

            ProfitWise.BulkEditProductVariantCogsModel = function() {
                var self = this;

                self.MasterProductId = ko.observable();
                self.ProductTitle = ko.observable();
                self.CurrentCogs = ko.observable();

                self.ValidationState = ko.computed(function() {
                });

                self.CancelButtonClick = function() {
                    ShopifyApp.Modal.close(false);
                };

                self.OkButtonClick = function() {
                    var postData = {
                        masterProductId: self.MasterProductId(),
                        currencyId: self.CogsAmountEditorModel.CurrencyId(),
                        Amount: self.CogsAmountEditorModel.Amount(),
                    };

                    var ajax = new ProfitWiseFunctions.Ajax();
                    ajax.HttpPost(
                        "/Cogs/BulkUpdateCogs", 
                        postData,
                        function() {
                            ShopifyApp.Modal.close(true);                               
                        });

                    return false;
                };

                self.CogsAmountEditorModel = new ProfitWiseWidgets.MoneyEditorWidgetModel();

                self.CogsAmountEditorModel.RegisterEnterKeyCallback(function() {
                    return self.OkButtonClick();
                });
            };

            var model = new ProfitWise.BulkEditProductVariantCogsModel();

            // Log data into the model
            model.MasterProductId(data.PwMasterProductId);
            model.ProductTitle(data.Title);
            model.CurrentCogs({
                CurrencyId : data.NormalizedCurrencyId,
                AmountLow : data.LowNormalizedCogs,
                AmountHigh : data.HighNormalizedCogs,
                IncludesAverages : data.HasCogsDetail,
            });

            model.CogsAmountEditorModel.CurrencyId(data.NormalizedCurrencyId);
            model.CogsAmountEditorModel.Amount(data.LowNormalizedCogs);

            ko.applyBindings(model);
            window.ModelHandle = model;
            ProfitWiseFunctions.PopOverAutoCloseInit();
        });
</script>
   
