
<script type="text/html" id="Report-Editor-Header-Sku">
    <div data-bind="if: SelectionModel.ShowSplashPage">
        <div data-bind="template: { name: 'Report-Editor-No-Filters',
                                data: { clickCallback:  function() { SelectionModel.ShowSplashPage(false); },
                                nextCallback: GotoNextCallback,
                                plural: 'Variants', singular: 'Variant' } }">
        </div>
    </div>

    <div data-bind="ifnot: SelectionModel.ShowSplashPage">
        <div class="row-fluid">
            <div class="col-xs-8 no-side-padding" style="height: 120px;">
                <div data-bind="template: { name: 'Filter-Paging-Widget', data: $data.FilterModel }"></div>
            </div>

            <div class="col-xs-4"></div>
        </div>

        <div class="row-fluid">
            <div class="col-xs-8 no-side-padding">
                <div style="width: 100%; border-top: 1px dashed #CCC;"></div>
                <a href="#" style="position: absolute; top: -40px; font-weight: 700;"
                   data-bind="click: SelectionModel.DeselectAll">Remove All Filters</a>
            </div>

            <div class="col-xs-1"></div>

            <div class="col-xs-3 no-side-padding" style="top: -20px; height: 250px;">
                <div style="padding: 20px;">
                    <p style="font-weight: 700; color: #666; font-size: 1.1em;">
                        Select Variant filters<br />for your Report
                    </p>

                    <p>
                        Your current Report is filtered by<br />
                        <span style="font-weight: 800; color: #777;">
                            <span data-bind="text: SelectionModel.NumberOfCheckedItems"></span> Variant(s).
                        </span>
                    </p>

                    <p>You can still <a href="#" data-bind="click: SelectionModel.DeselectAll">remove all filters</a>.</p>

                    <div style="padding-top:10px;">
                        <a href="#" data-bind="click: GotoNextCallback" class="btn btn-primary">Next &gt;&gt;</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/html" id="Report-Editor-Body-Sku">
    <div class="row-fluid" style="min-height: 400px;" data-bind="ifnot: SelectionModel.ShowSplashPage">

        <div class="col-xs-8 reduced-padding">
            <div data-bind="if: PageOfItems().length == 0">
                <div data-bind="template: { name: 'Report-Editor-Empty-Results', data: { ItemDescription: 'Variants' } }"></div>
            </div>

            <div data-bind="if: PageOfItems().length > 0">
                <table id="product-types" class="table" style="width: 100%; height: 100%; margin: 0;">
                    <tbody data-bind="foreach: PageOfItems">
                    <tr style="border-top: 0;">
                        <td>
                            <input class="form-control"
                                   type="checkbox"
                                   style="height: 15px; width: 15px;"
                                   data-bind="checked: $data.IsChecked, click: $parent.CheckboxClick" />
                        </td>

                        <td style="width:45%" class="overflow-gracefully">
                            <span data-bind="text: $data.ProductTitle, tooltip: { title: $data.ProductTitle }"></span>
                            <br />
                            <span data-bind="text: $data.Vendor" style="font-size:0.8em; font-weight:700; color:#666;"></span>
                        </td>
                        
                        <td style="width:45%"  class="overflow-gracefully">
                            <span data-bind="text: $data.VariantTitle, tooltip: { title: $data.VariantTitle }"></span>
                            <br />
                            <span data-bind="text:$data.Sku" style="font-size:0.8em; font-weight:700; color:#666;"></span>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-xs-4">
        </div>
    </div>
</script>

<script>
    ProfitWiseWidgets.ReportSkuModel = function (parent) {
        var self = this;
        self.Parent = parent;
        self.ReportId = ko.observable();

        // Data
        self.PageOfItems = ko.observableArray();

        // Paging and Filtering model
        self.FilterModel = new ProfitWiseWidgets.FilterPagingWidgetModel();
        self.FilterModel.PlaceHolderText("Search for Variants...");
        self.FilterModel.RegisterRefreshCallback(function () {
            self.ApplyFiltersAndPaging();
        });
        self.FilterModel.SetPageSize(5);

        // Selection Model
        self.SelectionModel = new ProfitWiseWidgets.SelectionModel();
        self.SelectionModel.EmptyDescription("(No Variant Title)");
        self.SelectionModel.KeyExtractor = function (item) { return item.PwMasterVariantId; };
        self.SelectionModel.DescriptionExtractor = function (item) { return item.VariantTitle; }

        self.Refresh = function (reportId, callback) {
            self.ReportId(reportId);
            self.FilterModel.SetPageNumber(1);
            var ajax = new ProfitWiseFunctions.Ajax();

            flow.exec(
                function () {
                    ajax.HttpGet("/ReportService/Skus?reportId=" + self.ReportId(), this);
                },
                function (allItemsFromServer) {
                    self.SelectionModel.LoadItems(allItemsFromServer);
                    ajax.HttpGet("/ReportService/SelectedSkus?reportId=" + self.ReportId(), this);
                },
                function (selectionData) {
                    self.SelectionModel.SetCheckedItems(selectionData.MarkedSkus);
                    self.ApplyFiltersAndPaging();
                    callback();
                }
            );
        }

        self.CheckboxClick = function (data) {
            self.ApplyFiltersAndPaging();
            return true;
        };

        self.ApplyFiltersAndPaging = function () {
            var searchText = self.FilterModel.SearchText() || "";
            var isShowAllSelected = self.FilterModel.IsShowAllSelected();

            var filterResults =
                self.SelectionModel.ApplyFiltersAndPaging(
                    searchText, isShowAllSelected, self.FilterModel.GetPageNumber(), self.FilterModel.GetPageSize());

            self.FilterModel.SetRecordCount(filterResults.NumberOfFilteredItems);
            self.PageOfItems(filterResults.PagedItems);
        };

        self.Save = function (callback) {
            flow.exec(
                function () {
                    var ajax = new ProfitWiseFunctions.Ajax();
                    var data = {
                        reportId: self.ReportId(),
                        markedSkus: self.SelectionModel.CheckedItems(),
                    };
                    ajax.HttpPost("/ReportService/SelectedSkus", data, this);
                },
                function (results) {
                    callback();
                });
        };

        self.GotoNextCallback = function () { };

        return self;
    };
</script>
