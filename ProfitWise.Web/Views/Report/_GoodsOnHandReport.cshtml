@using ProfitWise.Data.Model.Profit
@using ProfitWise.Data.Model.Reports

<style>
    .report-viewer-top-button {
        width: 130px;
    }

    .report-widget-label {
        font-weight: 700;
        color: #AAA;
        font-size: 1.2em;
    }

    .report-widget-drilldown-link {
        font-weight:700; 
        margin-top:10px;
        display: inline-block;
    }

    .profit-table tr td:nth-child(1), .profit-table tr th:nth-child(1)  {
        width:25%;
        text-align:left;
    }
    .profit-table tr td:nth-child(2), .profit-table tr th:nth-child(2)  {
        width:20%;
        text-align:right;
    }
    .profit-table tr td:nth-child(3), .profit-table tr th:nth-child(3)  {
        width:20%;
        text-align:right;
    }
    .profit-table tr td:nth-child(4), .profit-table tr th:nth-child(4)  {
        width:20%;
        text-align:right;
    }
    .profit-table tr td:nth-child(5), .profit-table tr th:nth-child(5)  {
        width:20%;
        text-align:right;
    }

    .executive-summary h1 {
        font-weight: 700;
        margin-top: 6px;
    }
    .executive-summary-label {
        font-weight: 700;
        color: #999;
        font-size:18p
    }
    .executive-summary .summary-cell {
        text-align: left;
    }

    .summary-header {
        text-align:center; border-bottom:1px dashed #CCC; overflow:auto;
    }

    .pie-chart {
        min-width: 310px; height: 400px; max-width: 600px;margin: 0 auto;clear: both;
    }

    #detail-report-table tr td:nth-child(1), #detail-report-table tr th:nth-child(1) {
        width: 22%;
    }

    #detail-report-table tr td:nth-child(2), #detail-report-table tr th:nth-child(2) {
        width: 14%;
        text-align: right;
    }

    #detail-report-table tr td:nth-child(3), #detail-report-table tr th:nth-child(3) {
        width: 14%;
        text-align: right;
    }

    #detail-report-table tr td:nth-child(4), #detail-report-table tr th:nth-child(4) {
        width: 13%;
        text-align: right;
    }

    #detail-report-table tr td:nth-child(5), #detail-report-table tr th:nth-child(5) {
        width: 13%;
        text-align: right;
    }

    #detail-report-table tr td:nth-child(6), #detail-report-table tr th:nth-child(6) {
        width: 13%;
        text-align: right;
    }

    #detail-report-table tr td:nth-child(7), #detail-report-table tr th:nth-child(7) {
        width: 11%;
        text-align: right;
    }
</style>

<!-- Profitability Views -->
<script id="Report-Goods-On-Hand" type="text/html">
    <div data-bind="ifnot: DatasetLoaded">
        <div style="min-height: 600px;">
            <h1 style="margin-top: 100px; text-align: center; font-weight: 700; font-size: 6em; color: #EEE;">
                No Report Loaded Yet
            </h1>
        </div>
    </div>
    
    <div data-bind="if: DatasetLoaded">
        <div style="min-height: 600px;">
            <h1 style="margin-top: 100px; text-align: center; font-weight: 700; font-size: 6em; color: #EEE;">
                Data Data Data!!!
            </h1>
        </div>

    </div>
</script>
<script id="Report-Profitability-Detail" type="text/html">
    <div id="details-drillup-button" style="height:40px; overflow:auto;">
        <a href="#" style="width:250px; font-weight:700;" data-bind="click: ExitDetailClick">
            <i class="glyphicon glyphicon-arrow-left"></i> Navigate Back to Summary
        </a>
    </div>

    <div id="column-chart-detail" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

    <div data-bind="with: ProfitabilityDetailContext">
        <div data-bind="if: Data().length == 0">
            <div style="margin-top: 200px; margin-bottom:200px; text-align: center; overflow:auto;">
                <i style="font-size: 6.0em; color: #DDD;" class="glyphicon glyphicon-tag"></i>
                <h1 style="font-size:3em; color: #AAA; font-weight: 700;">No Data Found Here</h1>
                <span style="color: #555;">Try refreshing the page or refining your filters</span>

            </div>
        </div>

        <div data-bind="if: Data().length > 0 && PagingModel.PageCount() > 1" style="text-align: right;">
            <div style="overflow:auto; margin-bottom: 30px;" data-bind="template: { name: 'Paging-Widget', data: PagingModel }"></div>
        </div>

        <div data-bind="if: Data().length > 0">
            <table class="table table-striped table-hover" id="detail-report-table" style="margin-top: 30px;">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th data-bind="template: { name: 'Sortable-Column-Header',
                                data: { ColumnIndex: 0, ColumnName: 'Items Sold', Model: SortingModel } }"></th>
                        <th data-bind="template: { name: 'Sortable-Column-Header',
                                data: { ColumnIndex: 1, ColumnName: 'Average Margin', Model: SortingModel } }"></th>
                        <th data-bind="template: { name: 'Sortable-Column-Header',
                                data: { ColumnIndex: 2, ColumnName: 'Net Sales', Model: SortingModel } }"></th>
                        <th data-bind="template: { name: 'Sortable-Column-Header',
                                data: { ColumnIndex: 3, ColumnName: 'CoGS', Model: SortingModel } }"></th>
                        <th data-bind="template: { name: 'Sortable-Column-Header',
                                data: { ColumnIndex: 4, ColumnName: 'Profit', Model: SortingModel } }"></th>
                        <th data-bind="template: { name: 'Sortable-Column-Header',
                                data: { ColumnIndex: 4, ColumnName: 'Profit %', Model: SortingModel } }"></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: Data">
                    <tr>
                        <td>
                            <div class="overflow-gracefully" style="max-width:350px;"
                                 data-bind="text: GroupingName, tooltip: { title: GroupingName, placement: 'bottom' }"></div>
                        </td>
                        <td>
                            <span class="overflow-gracefully"
                                  data-bind="text: TotalQuantitySold"></span>
                        </td>
                        <td>
                            <span class="overflow-gracefully"
                                  data-bind="text: ProfitWiseFunctions.ToDecimalPlaces(AverageMargin)"></span>%
                        </td>
                        <td>
                            <span class="overflow-gracefully"
                                  data-bind="text: ProfitWiseFunctions.FormatCurrency(TotalRevenue, $parent.Currency())"></span>
                        </td>
                        <td>
                            <span class="overflow-gracefully"
                                  data-bind="text: ProfitWiseFunctions.FormatCurrency(TotalCogs, $parent.Currency())"></span>
                        </td>
                        <td>
                            <span class="overflow-gracefully"
                                  data-bind="text: ProfitWiseFunctions.FormatCurrency(TotalProfit, $parent.Currency())"></span>
                        </td>
                        <td>
                            <span class="overflow-gracefully"
                                  data-bind="text: ProfitWiseFunctions.ToDecimalPlaces(ProfitPercentage)"></span>%
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div data-bind="if: Data().length > 0 && PagingModel.PageCount() > 1" style="text-align: right;">
            <div style="overflow:auto; margin-bottom: 30px;" data-bind="template: { name: 'Paging-Widget', data: PagingModel }"></div>
        </div>

    </div>
</script>

<!-- Profitability Models -->
<script id="Profitability-Detail-Context">
    ProfitWiseWidgets.ProfitabilityDetailContext = function () {
        var self = this;

        self.Data = ko.observableArray();
        self.Grouping = ko.observable('@ReportGrouping.Product');
        self.Currency = ko.observable(1);  // TODO: is there a cleaner way to get this?

        self.PagingModel = new ProfitWiseWidgets.PagingModel();
        self.PagingModel.Callback = function() {
            self.LoadDataset(self.ReportId());
        };
        self.PagingModel.ShowPageSizeSelector(true);

        self.SortingModel = new ProfitWiseWidgets.SortingModel();
        self.SortingModel.Callback = function () { self.LoadDataset(self.ReportId()); };

        self.ReportId = ko.observable();

        self.Initialize = function() {
            self.PagingModel.PageNumber(1);
            self.SortingModel.SelectedColumnIndex(4);
            self.SortingModel.SortByDirectionDown(true);
        }

        self.Ordering = ko.computed(function() {
            var index = self.SortingModel.SelectedColumnIndex();
            var descending = self.SortingModel.SortByDirectionDown();

            if (index == 0)
                return descending ? '@ColumnOrdering.QuantitySoldDescending' : '@ColumnOrdering.QuantitySoldAscending';
            if (index == 1)
                return descending ? '@ColumnOrdering.AverageMarginDescending' : '@ColumnOrdering.AverageMarginAscending';
            if (index == 2)
                return descending ? '@ColumnOrdering.NetSalesDescending' : '@ColumnOrdering.NetSalesAscending';
            if (index == 3)
                return descending ? '@ColumnOrdering.CogsDescending' : '@ColumnOrdering.CogsAscending';
            if (index == 4)
                return descending ? '@ColumnOrdering.ProfitDescending' : '@ColumnOrdering.ProfitAscending';
            if (index == 5)
                return descending ? '@ColumnOrdering.ProfitDescending' : '@ColumnOrdering.ProfitAscending';

            return '@ColumnOrdering.ProfitDescending';
        });

        self.Drilldown = function (e) {
            if (e.seriesOptions) {
                return;
            }
            flow.exec(
                function () {
                    var ajax = new ProfitWiseFunctions.Ajax();
                    ajax.HttpGet(e.point.drilldownurl, this);
                },
                function (data) {
                    e.target.addSeriesAsDrilldown(e.point, data);
                    console.log(data);
                });
        }

        self.LoadDataset = function (reportId, callback) {
            flow.exec(
                function () {
                    self.ReportId(reportId);
                    var ajax = new ProfitWiseFunctions.Ajax();
                    var data = {
                        reportId: reportId,
                        grouping: self.Grouping(),
                        ordering: self.Ordering(),
                        pageNumber: self.PagingModel.PageNumber(),
                        pageSize: self.PagingModel.PageSize(),
                    };
                    ajax.HttpPost("/QueryService/Detail",  data, this);
                },
                function (data) {
                    self.Data.removeAll();
                    self.Data(data.rows);
                    self.PagingModel.RecordCount(data.count);

                    ProfitWiseWidgets.LoadColumnChart(
                        '#column-chart-detail', 'Profitability', data.series, null, data.currency, self.Drilldown);

                    if (callback) {
                        callback();
                    }
                }
            );
        };
        return self;
    };
</script>


<script id="Goods-On-Hand-Model">
    ProfitWiseWidgets.GoodsOnHandModel = function () {
        var self = this;
        self.ReportId = ko.observable();
        self.DatasetLoaded = ko.observable(false);

        /*
        self.SummaryActive = ko.observable(true);
        self.ProfitabilityDetailContext = new ProfitWiseWidgets.ProfitabilityDetailContext();

        self.ProfitabilitySummaryContext.DetailCallback = function (grouping) {
            flow.exec(
                function () {
                    self.ProfitabilityDetailContext.Grouping(grouping);
                    self.SummaryActive(false);
                    self.RefreshReportData(self.ReportId(), this);
                }, function () {
                    $('html, body').animate({ scrollTop: 0 });
                });
        };

        self.ExitDetailClick = function () {
            self.SummaryActive(true);
            self.RefreshReportData(self.ReportId());
        };
        */
        
        self.RefreshReportData = function (reportId, callback) {
            self.ReportId(reportId);

            /*
            if (self.SummaryActive()) {
                self.ProfitabilitySummaryContext.LoadDataset(reportId, callback);
            } else {
                self.ProfitabilityDetailContext.Initialize();
                self.ProfitabilityDetailContext.LoadDataset(reportId, callback);
            }
            */

            self.DatasetLoaded(true);
        };

        return self;
    };
</script>
