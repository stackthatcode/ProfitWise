<script type="text/html" id="Report-Editor-Filter-Summary">
    <style>
        .report-editor-filter-summary .tooltip-inner {
            margin-top:-1px;
        }
    </style>
    
    <div class="report-editor-filter-summary">
        <div style="height: 10px;"></div>
        <div data-bind="template: { name: 'Report-Editor-Filter-Grid',
                                        data: { label: 'Product Types Filters', grid: ProductTypesGrid } }"></div>

        <div style="height: 10px;"></div>
        <div data-bind="template: { name: 'Report-Editor-Filter-Grid',
                                        data: { label: 'Vendor Filters', grid: VendorsGrid } }"></div>

        <div style="height: 10px;"></div>
        <div data-bind="template: { name: 'Report-Editor-Filter-Grid',
                                        data: { label: 'Product Filters', grid: ProductsGrid } }"></div>

        <div style="height: 10px;"></div>
        <div data-bind="template: { name: 'Report-Editor-Filter-Grid',
                                        data: { label: 'Variant Filters', grid: SkuGrid } }"></div>

    </div>
</script>

<script type="text/html" id="Report-Editor-Filter-Grid">
    <div style="margin-bottom:5px; font-size:0.8em; font-weight:700;">
        <span data-bind="text: label"></span><span>:</span>
        <span data-bind="if: grid().length == 0">
            <span style="font-weight:400;">(none)</span>
        </span>
    </div>

    <div data-bind="foreach: grid">
        <div class="filter-tag-container"
                 style="display:inline-block; margin-bottom:5px;"
                 data-bind="tooltip: { title: $data.Description, placement: 'bottom' }">

            <div class="filter-description" style="max-width:125px !important;">
                <span data-bind="text: $data.Title"></span>
            </div>

            <!-- Add a delete method here... -->
            <a class="filter-remove" href="#" data-bind="click: RemoveClick">
                &nbsp; <i class="glyphicon glyphicon-remove"></i>
            </a>
        </div>
    </div>
</script>

<script>
    ProfitWiseWidgets = ProfitWiseWidgets || {};

    ProfitWiseWidgets.ReportFilterSummaryModel = function () {
        var self = this;
        self.ReportId = ko.observable();
        self.FiltersGrid = ko.observableArray([]);

        self.GetFiltersByType = function (filterType) {
            return AQ(self.FiltersGrid())
                .where(function (item) { return item.FilterType == filterType; })
                .toArray();
        };

        self.ProductTypesGrid = ko.computed(
            function () { return self.GetFiltersByType(ProfitWiseWidgets.ProductTypeFilter); });
        self.VendorsGrid = ko.computed(
            function () { return self.GetFiltersByType(ProfitWiseWidgets.VendorFilter); });
        self.ProductsGrid = ko.computed(
            function () { return self.GetFiltersByType(ProfitWiseWidgets.ProductFilter); });
        self.SkuGrid = ko.computed(
            function () { return self.GetFiltersByType(ProfitWiseWidgets.SkuFilter); });
        
        // Triggered whenever there's a change to the filters
        self.RemoveCallback = function (filterType, key) { };

        self.RegisterRemoveCallback = function (callback) {
            self.RemoveCallback = callback;
        };
        
        // AJAX / server-side interfacing methods
        self.Refresh = function (callback) {
            flow.exec(
                function () {
                    var ajax = new ProfitWiseFunctions.Ajax();
                    ajax.HttpGet("/ReportService/Filters?reportId=" + self.ReportId(), this);
                },
                function (filters) {
                    console.log(filters);

                    AQ(filters)
                        .each(function (item) {
                            item.RemoveClick = function () {
                                self.RemoveFilter(item);
                            }
                        });

                    self.FiltersGrid(filters);
                    if (callback) {
                        callback();
                    }
                }
            );
        };

        self.RemoveFilter = function (item) {
            flow.exec(
                function () {
                    var ajax = new ProfitWiseFunctions.Ajax();
                    var data = {
                        reportId: self.ReportId(),
                        filterId: item.PwFilterId,
                    };

                    ajax.HttpPost("/ReportService/RemoveFilterById", data, this);
                },
                function () {
                    // TODO *** replace this with premature optimization to remove directly from grid
                    self.Refresh(this);
                },
                function () {
                    self.RemoveCallback(item.FilterType, item.Key);
                }
            );
        };

        return self;
    };
</script>
