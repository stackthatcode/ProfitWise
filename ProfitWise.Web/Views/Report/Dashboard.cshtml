@using ProfitWise.Data.Model.Reports
@using ProfitWise.Web.Attributes
@{
    Context.PullCommonContext().PageTitle = "Profitability Dashboard";
}

<!-- Dependency Widgets -->
@Html.Partial("~/Views/SharedTemplates/_PagingWidget.cshtml")
@Html.Partial("~/Views/SharedTemplates/_SelectorPopoverWidget.cshtml")
@Html.Partial("~/Views/SharedTemplates/_SortColumnHeaderWidget.cshtml")
@Html.Partial("~/Views/SharedTemplates/_DateRangePickerWidget.cshtml")
@Html.Partial("~/Views/Report/_FilterPagingWidget.cshtml")
@Html.Partial("~/Views/Report/_ReportSelectionCountPreview.cshtml")
@Html.Partial("~/Views/Report/_ReportFilterWidgets.cshtml")
@Html.Partial("~/Views/Report/_ReportEditorFilters.cshtml")
@Html.Partial("~/Views/Report/_ReportViewer.cshtml")
@Html.Partial("~/Views/Report/_ReportEditor.cshtml")

<style>
    .modal-backdrop { z-index: 900; }
</style>

<script type="text/html" id="Report-Manager-Top-Level">
    <div data-bind="if: $data.InFilterEditMode">
        <div data-bind="template: { name: 'Report-Editor-Top-Level', data: ReportEditorModel }"></div>
    </div>

    <div data-bind="ifnot: $data.InFilterEditMode">
        <div data-bind="template: { name: 'Report-Viewer-Top-Level', data: ReportViewerModel }"></div>
    </div>
</script>

<!-- KnockoutJS Root Element -->
<div data-bind="template: { name: 'Report-Manager-Top-Level', data: $root }"></div>

<!-- KnockoutJS Model -->
<script>
    var ProfitWiseWidgets = ProfitWiseWidgets || {};    
    var OverallProfitabilityReportId = @PwSystemReportFactory.OverallProfitabilityId;

    // Requires a reference to a InFilterEditMode observable
    ProfitWiseWidgets.ReportManagerModel = function () {
        var self = this;
        self.InFilterEditMode = ko.observable(false);

        self.ReportViewerModel = new ProfitWiseWidgets.ReportViewerModel();
        self.ReportEditorModel = new ProfitWiseWidgets.ReportEditorModel();

        // To be configured by the parent/owner object
        self.ReportViewerModel.EditReportCallback = function (reportId) {
            self.InFilterEditMode(true);
            self.ReportEditorModel.LoadReport(reportId);        
        };

        self.ReportEditorModel.OkCallback = function () {
            self.InFilterEditMode(false);
            self.ReportViewerModel.SelectReport(self.ReportEditorModel.ReportId());
        };

        self.ReportEditorModel.CancelCallback = function () {
            self.InFilterEditMode(false);
        };

        self.RegisterSelectReportCallback = function (callback) {
            self.ReportViewerModel.SelectReportCallback = callback;
        };
        
        self.Initialize = function (callback) {
            self.InFilterEditMode(false);
            flow.exec(
                function() {
                    self.ReportViewerModel.RefreshReportList(this);
                }, 
                function() {
                    self.ReportViewerModel.SelectReportByReportId(OverallProfitabilityReportId);
                    if (callback) {
                        callback();
                    }
                });
        };

        return self;
    };

    $(document)
        .ready(function () {
            ProfitWiseFunctions.FixedHeaderScrollingInit(".header-scrollfix");
            ProfitWiseFunctions.PopOverAutoCloseInit();

            var model = new ProfitWiseWidgets.ReportManagerModel();
            ko.applyBindings(model);
            model.Initialize();
        });
</script>
