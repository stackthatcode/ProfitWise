


<script>
    ProfitWiseWidgets.ProductTypeFilterModel = function (parent) {
        var self = this;
        

        self.ReportId = ko.observable();
        self.FilterType = self.ParentReportModel.ProductTypeFilter;

        // Data
        self.CurrentPageOfItems = ko.observableArray();
        
        // Paging and Filtering model
        self.FilterModel = new ProfitWiseWidgets.FilterPagingWidgetModel();
        self.FilterModel.PlaceHolderText("Search for Product Types...");
        self.FilterModel.RegisterRefreshCallback(function () {
            self.ApplyFiltersAndPaging();
        });
        self.FilterModel.SetPageSize(50);

        // Selection Model
        self.SelectionModel = new ProfitWiseWidgets.SelectionModel();

        self.SelectionModel.RegisterUpdateCallback(
            function (item, selected) {                    
                self.ParentReportModel.UpdateFilter(
                    item.Key, selected, self.FilterType, item.Title);
            }
        );

        self.DeselectAll = function() {
            self.ParentReportModel.RemoveFilterType(self.ParentReportModel.ProductTypeFilter);
            self.SelectionModel.ShowSplashPage(true);
        }

        self.Refresh = function (callback) {
            self.FilterModel.SetPageNumber(1);
            var ajax = new ProfitWiseFunctions.Ajax();

            flow.exec(
                function () {
                    ajax.HttpGet("/ReportService/ProductTypes", this);
                },
                function (allItemsFromServer) {
                    self.SelectionModel.LoadItems(allItemsFromServer);
                    self.ApplyFiltersAndPaging();
                    callback();
                }
            );
        }

        self.ApplyFiltersAndPaging = function () {
            var filterResults = 
                self.SelectionModel.ApplyFiltersAndPaging(
                    self.FilterModel.SearchText(), self.FilterModel.GetPageNumber(), self.FilterModel.GetPageSize());

            self.FilterModel.SetRecordCount(filterResults.NumberOfFilteredItems);
            self.CurrentPageOfItems(filterResults.PagedItems);
        };

        return self;
    };
</script>