@using ProfitWise.Web.Plumbing
@model dynamic
@Html.Partial("~/Views/SharedTemplates/_PagingWidget.cshtml")


<div class="admin-arena">
    <form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>

    <div data-bind="template: { name: 'Admin-Interface' }"></div>
</div>

<script type="text/html" id="Admin-Interface">
    <div style="height: 120px;">
        <div class="row">
            <div class="col-xs-6">
                <h2>ProfitWise Administration</h2>
                <p>This is where Admins Kick-it</p>
            </div>
            <div class="col-xs-6" style="padding-top: 20px; text-align: right;">
                <a href="Logout" style="font-weight: 700;">Log Out</a>
                
            </div>
        </div>
    </div>

    <div style="height: 60px;">
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active">
                <a href="#users-tab" data-bind="click: UsersClick"
                   aria-controls="home" role="tab" data-toggle="tab">Users</a>
            </li>
            <li role="presentation">
                <a href="#maintenance-tab" data-bind="click: MaintenanceClick"
                   aria-controls="profile" role="tab" data-toggle="tab">Maintenance</a>
            </li>
            <li role="presentation">
                <a href="@GlobalConfig.BaseUrl/hangfire"
                   aria-controls="profile" role="tab">Hang Fire</a>
            </li>
        </ul>
    </div>

    <div class="tab-content" style="clear: both;">
        <div id="users-tab" role="tabpanel" class="tab-pane active reduced-padding"
             data-bind="template: { name: 'Admin-Users', data: $data }">
        </div>
        <div id="maintenance-tab" role="tabpanel" class="tab-pane reduced-padding"
             data-bind="template: { name: 'Admin-Maintenance', data: $data }">
        </div>
    </div>
</script>

<script type="text/html" id="Admin-Users">
    <div style="height:40px;"></div>
    
    <div data-bind="ifnot: DrilldownVisible">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Domain</th>
                <th>Email</th>
                <th>User Id</th>
                <th>Shop Id</th>
                <th>View</th>
            </tr>
            </thead>
            <tbody data-bind="foreach: Users">
            <tr>
                <td data-bind="text: Domain"></td>
                <td data-bind="text: Email"></td>
                <td>
                    <span data-bind="text: UserId"></span><br />
                </td>
                <td>
                    <span data-bind="text: PwShopId"></span>
                </td>
                <td>
                    <a href="#" class="btn btn-primary btn-sm" data-bind="click: ViewClick">View</a>
                </td>
            </tr>
            </tbody>
        </table>
    </div>
        
    <div data-bind="if: DrilldownVisible">
        <a href="#" class="btn btn-default" data-bind="click: BackClick">
            <i class="glyphicon glyphicon-arrow-left"></i> Go Back
        </a>
        
        <div data-bind="with: UserModel">
            <br />
            <h4>User Details - <span data-bind="text: user.Domain"></span></h4>
            <br />
            <h5 style="font-weight:700;">Account Information</h5>
            <table class="table table-striped">
                <tbody data-bind="foreach: user.PropertyList">
                <tr>
                    <td data-bind="text:key"></td>
                    <td data-bind="text:value"></td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</script>

<script type="text/html" id="Admin-Maintenance">
    <div style="height:40px;"></div>
    
    <div class="input-group">
        <label>Enable Maintenance Mode</label>
        <select class="form-control" 
                data-bind="options: MaintenanceOptions,
                        value: MaintenanceActive,
                        optionsValue: 'Active',
                        optionsText: 'Text'">           
        </select>
    </div>
    <div style="margin-top:20px;">
        <a href="#" class="btn btn-danger" data-bind="click: MaintenanceSelect">Apply Changes</a>
    </div>
</script>

<script>
    var ProfitWiseAdmin = ProfitWiseAdmin || {};

    ProfitWiseAdmin.Model = function () {
        var self = this;

        self.PagingModel = new ProfitWiseWidgets.PagingModel();
        self.PagingModel.Callback = function() {
            self.LoadUsers();
        };

        self.AjaxFactory = function () {
            var settings = new ProfitWiseFunctions.AjaxSettings();
            settings.ErrorCallbackFunction = function () {
                alert("Error has occurred - please check system logs");
            };
            var ajax = new ProfitWiseFunctions.Ajax(settings);
            return ajax;
        };

        self.AntiForgeryToken = function () {
            return $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
        };

        self.Impersonate = function (userId) {
            flow.exec(
                function() {
                    var url = "/AdminHome/Impersonate?userId=" + userId;
                    var token = self.AntiForgeryToken();
                    var ajax = self.AjaxFactory();
                    ajax.HttpPost(url, {}, this, token);
                },
                function() {
                    window.location = '@GlobalConfig.BaseUrl';
                });
        }            
        
        self.UserModel = ko.observable();

        self.DrilldownVisible = ko.computed(function() { return self.UserModel(); });

        var propertiesAsArray = function (data) {
            output = [];
            for (var key in data) {
                var value = data[key];
                output.push({ key: key, value: value });
            }
            return output;
        };

        self.LoadUser = function(userId) {
            flow.exec(
                function() {
                    var ajax = self.AjaxFactory();
                    ajax.HttpGet("/AdminHome/User?userId=" + userId, this);
                },
                function(data) {                    
                    data.user.PropertyList = propertiesAsArray(data.user);
                    self.UserModel(data);
                });
        };

        self.BackClick = function() {
            self.UserModel(null);
        };

        self.LoadUsers = function () {
            flow.exec(
                function () {
                    var ajax = self.AjaxFactory();
                    ajax.HttpGet("/AdminHome/Users", this);
                },
                function (data) {
                    AQ(data).each(function(item) {
                        
                        item.ImpersonateClick = function() {
                            self.Impersonate(item.UserId);
                        };

                        item.ViewClick = function() {
                            self.LoadUser(item.UserId);
                        };
                    });

                    self.Users(data);
                });
        };

        self.Users = ko.observableArray();

        self.UsersClick = function () {
            self.LoadUsers();
        };

        self.BillingClick = function () {
        };

        self.MaintenanceOptions = [
            { Active: 0, Text: "Maintenance Mode is now OFF" },
            { Active: 1, Text: "Maintenance Mode is now ON" }
        ];

        self.MaintenanceActive = ko.observable(false);

        self.MaintenanceActiveText = ko.computed(function() {
            return self.MaintenanceActive() == 1 ? "ON" : "OFF";
        });

        self.MaintenanceClick = function () {
            flow.exec(
                function () {
                    var ajax = self.AjaxFactory();
                    ajax.HttpGet("/AdminHome/Maintenance", this);
                },
                function (data) {
                    self.MaintenanceActive(data.Active);
                }
            );
        };

        self.MaintenanceSelect = function () {
                flow.exec(
                    function () {
                        var ajax = self.AjaxFactory();
                        ajax.HttpPost("/AdminHome/Maintenance", { Active:self.MaintenanceActive() }, this);
                    },
                    function () {
                        alert("Maintenace Mode now: " + self.MaintenanceActiveText());
                    }
                );
        };

        return self;
    };

    var model = new ProfitWiseAdmin.Model();
    ko.applyBindings(model);
    model.UsersClick();
</script>
