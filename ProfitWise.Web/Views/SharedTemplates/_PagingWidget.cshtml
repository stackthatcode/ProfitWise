<!-- Requires KnockoutJS Bootstrap integration plugin Knockstrap -->

<style>
    .standard-height {
        height: 33px !important;
    }
    ul.pagination li a {
        line-height: 1.58em !important;
    }
</style>

<script type="text/html" id="Paging-Widget-Popover">
    <!--<div id="pagination-popover-content"> <!-- style="display: none;"-->
    <div id="pagination-popover" class="input-group">
        <input type="text" class="form-control jump-to-page-class"
               placeholder="Jump to page number..." maxlength="5"
               style="height:36px;"
               data-bind="value: JumpToPage, 
                    valueUpdate: 'afterkeydown', 
                    hasFocus: true,
                    event: { keyup: JumpToPageOnEnter }" />

        <span class="input-group-btn"  style="height:36px;">
            <a href="#" class="btn btn-default" data-bind="click: JumpToPageFunction" type="button">Go!</a>
        </span>
    </div>
</script>

<script type="text/html" id="Paging-Widget">
    <div data-bind="if: ShowPageSizeSelector" style="display:inline-block; position:relative; top:-13px;">
        <span style="width: 140px; margin-right: 7px;  display:inline-block;">
            <select class="form-control" style="height: 35px;"
                    data-bind="value: PageSize, event:{ change: PageSizeChanged}">
                <option value="5">5 per page</option>
                <option value="10">10 per page</option>
                <option value="25">25 per page</option>
                <option value="50">50 per page</option>
                <option value="100">100 per page</option>
            </select>
        </span>
    </div>
    <div class="popover-container" name="paging-widget" style="display: inline-block;">
        <nav aria-label="Page navigation">
            <ul class="pagination" style="margin: 0px;">
                <li>
                    <a href="#" aria-label="First" data-bind="click: First">
                        <span><i class="glyphicon glyphicon-backward"></i>&nbsp;</span>
                    </a>
                </li>
                <li>
                    <a href="#" aria-label="Backward" data-bind="click: Backward">
                        <span><i class="glyphicon glyphicon-step-backward"></i>&nbsp;</span>
                    </a>
                </li>
                <li>
                    <a href="#" rel="popover" class="popover-launcher"
                       data-bind="popover: { options: { placement: 'bottom', trigger: 'click', },  template: 'Paging-Widget-Popover', data: $data }">
                        Page <span data-bind="text: PageNumber"></span> of <span data-bind="text: PageCount"></span></a>
                </li>
                <li>
                    <a href="#" aria-label="Forward" data-bind="click: Forward">
                        <span><i class="glyphicon glyphicon-step-forward"></i>&nbsp;</span>
                    </a>
                </li>
                <li>
                    <a href="#" aria-label="Last" data-bind="click: Last">
                        <span><i class="glyphicon glyphicon-forward"></i>&nbsp;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</script>

<script type="text/javascript">
    var ProfitWiseWidgets = ProfitWiseWidgets || {};

    ProfitWiseWidgets.PagingModel = function() {
        var self = this;

        self.RecordCount = ko.observable(0);
        self.PageNumber = ko.observable(0);
        self.PageSize = ko.observable(50);
        
        self.ShowPageSizeSelector = ko.observable(false);

        self.PageSizeChanged = function() {
            if (self.PageNumber() > self.PageCount()) {
                self.PageNumber(self.PageCount());
            }

            if (self.JumpToPage() > self.PageCount()) {
                self.JumpToPage(self.PageCount());
            }
            self.Callback();
        }

        self.JumpToPage = ko.observable();

        self.JumpToPageOnEnter = function(model, event) {
            if (event.keyCode == 13) {
                self.JumpToPageFunction();
                return false;
            } else {
                return true;
            }
        };

        self.JumpToPageFunction = function () {
            var newPage = parseInt(self.JumpToPage());
            if (isNaN(newPage)) {
                self.JumpToPage("");
                return;
            }

            if (newPage < 1) {
                newPage = 1;
            }
            if (newPage > self.PageCount()) {
                newPage = self.PageCount();
            }
            
            self.PageNumber(newPage);
            self.PageNumber.valueHasMutated();
            
            self.Callback();                
            ProfitWiseFunctions.PopOverCloseAll();

            self.JumpToPage("");
            self.JumpToPage.valueHasMutated();

            self.ScrollToTop();
        };
        
        self.PageCount = ko.computed(function () {
            var computedPageCount =
                Math.floor((Math.floor(self.RecordCount()) + Math.floor(self.PageSize()) - 1) / self.PageSize());

            return (computedPageCount);
        });

        self.ScrollToTop = function(){
            $('html,body').animate({ scrollTop: 0 });
        }

        self.Forward = function() {
            if (self.PageNumber() < self.PageCount()) {
                self.PageNumber(self.PageNumber() + 1);
                self.Callback();
                self.ScrollToTop();
            }
        };

        self.Backward = function() {
            if (self.PageNumber() > 1) {
                self.PageNumber(self.PageNumber() - 1);
                self.Callback();
                self.ScrollToTop();
            }
        };

        self.First = function() {
            self.PageNumber(1);
            self.Callback();
            self.ScrollToTop();
        };

        self.Last = function() {
            self.PageNumber(self.PageCount());
            self.Callback();
            self.ScrollToTop();
        };

        self.Callback = function() { };

        return self;
    };
</script>

