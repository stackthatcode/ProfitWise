<!-- Expects $data.options, $data.selection, $data.okcallback and $data.popovercallback -->
<script type="text/html" id="Selector-Popover-Widget">
    <span class="popover-container">
        <a href="#" style="font-weight: 700;" class="popover-launcher"
           data-bind="click: PopOverLaunch,
                    popover: { options: { placement: 'bottom', trigger: 'click', },
                    template: 'Selector-Popover-Widget-Popover-Layer', data: $data }"><span data-bind="text: ElementText"></span></a>
    </span>
</script>
<script type="text/html" id="Selector-Popover-Widget-Popover-Layer">
    <div class="input-group" style="width:250px;">
        <div style="height:30px;" data-bind="text:PromptText"></div>

        <!-- Data-Bind to KO stuff -->
        <select class="form-control"
                style="width:100%;"
                    data-bind="options: Options,
                        optionsText: OptionsText(),
                        value: EditSelection,
                        optionsValue: OptionsValue(),
                        event: { change: OkButtonClick }"></select>
    </div>
</script>

<script>
    ProfitWiseWidgets = ProfitWiseWidgets || {};

    ProfitWiseWidgets.SelectorPopoverModel = function (parameters) {
        var self = this;

        self.OptionsText = ko.observable(parameters.OptionsText);
        self.OptionsValue = ko.observable(parameters.OptionsValue);
        self.Options = ko.observableArray(parameters.Options || []);
        self.PromptText = ko.observable(parameters.PromptText);

        self.Selection = ko.observable();
        self.EditSelection = ko.observable();

        self.SelectedOption = ko.computed(function () {
            return AQ(self.Options())
                    .firstOrDefault(function (item) { return item[self.OptionsValue()] == self.Selection(); });
        });

        self.ElementText = ko.computed(function() {
            var option = self.SelectedOption();
            var output = option ? option[self.OptionsText()] : "(No Selection)";
            return output;
        });

        self.PopOverLaunchCallback = parameters.PopOverLaunchCallback;
        self.PopOverLaunch = function () {
            self.EditSelection(self.Selection());
            if (self.PopOverLaunchCallback) {
                self.PopOverLaunchCallback(this);
            }
        };

        self.OkCallback = parameters.OkCallback;
        self.OkButtonClick = function () {
            self.Selection(self.EditSelection());
            ProfitWiseFunctions.PopOverCloseAll();
            if (self.OkCallback) {
                self.OkCallback();
            }   
        };
    };
</script>
