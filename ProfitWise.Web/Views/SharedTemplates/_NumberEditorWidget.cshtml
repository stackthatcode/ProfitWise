<!-- Requires KnockoutJS Bootstrap integration plugin Knockstrap -->

<script type="text/html" id="Number-Editor-Widget">
    <div class="input-group" style="width:100%;">
        
        <input type="text" class="form-control" style="width:100%;"
               data-bind="value: Amount,
                        attr: { id: $data.Identifier, placeholder: $data.PlaceHolder },
                        event: { 
                            focus: function() { 
                                if (event) { 
                                    event.target.select();
                                }
                            }, 
                            keyup: InvokeKeyCallback,
                            blur: InvokeEditorLostFocusCallback }"
               maxlength="12">
    </div>
</script>

<script type="text/javascript">
    var ProfitWiseWidgets = ProfitWiseWidgets || {};


    // Parameters = { identifier, placeholder, lowconstraint, highconstraint, defaultamount }
    ProfitWiseWidgets.NumberEditorWidgetModel = function(parameters) {
        var self = this;                
        self.Identifier = ko.observable(parameters.identifier);
        self.PlaceHolder = ko.observable(parameters.placeholder);
        self.Amount = ko.observable(numeral(parameters.defaultamount || 0).format('0.00'))
                        .extend({ numeric: { LowConstraint: parameters.lowconstraint, HighConstraint: parameters.highconstraint, } });

        self.SetFocus = function() { $("#" + self.Identifier()).focus(); };        

        // Enter-key Stuff
        self.EnterKeyCallback = function () { };
        self.EscapeKeyCallback = function () { };
        self.EditorLostFocusCallback = function() {};

        self.RegisterEnterKeyCallback = function (callback) {
            self.EnterKeyCallback = callback;
        };

        self.RegisterEscapeKeyCallback = function (callback) {
            self.EscapeKeyCallback = callback;
        };

        self.RegisterEditorLostFocusCallback = function(callback) {
            self.EditorLostFocusCallback = callback;
        };

        self.InvokeKeyCallback = function (model, event) {
            if (event.keyCode == 27) {
                self.EscapeKeyCallback();
                return false;
            }
            if (event.keyCode == 13) {
                self.EnterKeyCallback();
                return false;
            } else {
                return true;
            }
        };

        self.InvokeEditorLostFocusCallback = function(model, event) {
            self.EditorLostFocusCallback();
        };

        return self;
    };
</script>
