@using ProfitWise.Data.Model.Preferences


<!-- Expects data to contain: value (observable), change (function)  -->
<!-- function(value) { console.log(value); }-->
<script id="Date-Picker-Widget" type="text/html">
    <div style="width:200px;">
        <div class='input-group date'
             data-bind="dateTimePicker: $data.value, 
                        change: $data.change,
                        dateTimePickerOptions: { format: 'MM/DD/YYYY' }">

            <input type='text' class="form-control"
                   data-bind="click: function(data, event) { $(event.target).next().click(); }" />

            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
</script>

<script>
    ko.bindingHandlers.dateTimePicker = {
        init: function (element, valueAccessor, allBindingsAccessor) {
            //initialize datepicker with some optional options
            var options = allBindingsAccessor().dateTimePickerOptions || {};
            $(element).datetimepicker(options);

            //when a user changes the date, update the view model
            ko.utils.registerEventHandler(element, "dp.change", function (event) {
                var value = valueAccessor();
                if (ko.isObservable(value)) {
                    if (event.date != null && !(event.date instanceof Date)) {
                        value(event.date.toDate());
                    } else {
                        value(event.date);
                    }
                }
                
                if (allBindingsAccessor().change) {
                    allBindingsAccessor().change(value());
                }
            });

            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {
                var picker = $(element).data("DateTimePicker");
                if (picker) {
                    picker.destroy();
                }
            });
        },
        update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
            //valueAccessor refers to the field specified in dateTimePicker

            var picker = $(element).data("DateTimePicker");

            //when the view model is updated, update the widget
            if (picker) {
                var koDate = ko.utils.unwrapObservable(valueAccessor());

                //in case return from server datetime i am get in this form for example /Date(93989393)/ then fomat this
                koDate = (typeof (koDate) !== 'object') ? new Date(parseFloat(koDate.replace(/[^0-9]/g, ''))) : koDate;
                picker.date(koDate);
            }
        }
    };
</script>