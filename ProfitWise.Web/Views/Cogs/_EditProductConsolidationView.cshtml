@using ProfitWise.Data.Model.Shop
@using ProfitWise.Web.Attributes
<style>
    .consol-category-label { color: #777; font-weight: 700;font-size: 1.3em; }
    .consol-primary { font-weight: 700; }    
    .product-consol {margin-bottom: 10px;}
    .product-consol tr th { color: #AAA; border:none; }    
    .product-consol tr td { vertical-align: middle !important; }
    .product-consol tr td:nth-child(1), .product-consol tr th:nth-child(1) { width: 45%; }
    .product-consol tr td:nth-child(2), .product-consol tr th:nth-child(2) { width: 25%; text-align: left; }
    .product-consol tr td:nth-child(3), .product-consol tr th:nth-child(3) { width: 10%; text-align: left; }
    .product-consol tr td:nth-child(4), .product-consol tr th:nth-child(4) { width: 10%; text-align: left; }
    .product-consol tr td:nth-child(5), .product-consol tr th:nth-child(5) { width: 10%; text-align: right; }    
    .product-consol .id-label { font-size:0.8em; }
    
    .consolidation-synposis { font-weight:700; color: #888; }
    .consol-link-control { font-weight:700; }

    input[type='text'] { width: 100px; }
</style>

<script type="text/html" id="Product-Consolidation-Template">
    <div class="row">
        <div class="col-xs-6" style="padding-top: 20px;">            
            <h3 class="drilldown-header overflow-gracefully" 
                data-bind="text: MasterProductTitle"></h3>
            <div class="drilldown-subtitle" data-bind="text: VariantTitle"></div>
            
            <div class="drilldown-spacer"></div>

            <div class="return-link">
                <a href="#" class="btn btn-default" data-bind="click: ExitCallback">
                    <i class="glyphicon glyphicon-arrow-left"></i> &nbsp;Go Back
                </a>
            </div>
        </div>
        
        <div class="col-xs-6" style="text-align: right; padding-top: 40px;">
            <a href="#" class="btn btn-primary" style="width:250px;" data-bind="click: EditCogsCallback">
                <i class="glyphicon glyphicon-pencil"></i> &nbsp; Edit Product CoGS
            </a>
        </div>
    </div>

    <div style="padding-top: 40px; padding-bottom: 30px;">
        <div class="row" style="height: 50px;">
            <div class="col-xs-12">
                <div class="consol-category-label">Product Consolidations</div>
            </div>
        </div>

        <div data-bind="with: PrimaryProduct">
            <div data-bind="template: { name: 'Product-Consolidation-Product-Widget' }">
            </div>
        </div>
    </div>

    <div class="row" style="height: 40px; border-top: 1px solid #CCC;">
        <div class="col-xs-10"></div>
    </div>

    <div class="row" style="height: 50px;">
        <div class="col-xs-12">
            <div class="consol-category-label">Variant Consolidations</div>
        </div>
    </div>

    <div id="variant-consolidation-widget" data-bind="foreach: PrimaryVariantGrid">
        <div data-bind="template: { name: 'Product-Consolidation-Variant-Widget' }"
             style="padding-bottom: 30px;">
        </div>
    </div>
</script>

<script id="Consolidation-Expander" type="text/html">
    <span data-bind="ifnot: $data.Visible">
        <a href="#" data-bind="click: function() { $data.Visible(true); }" class="consol-link-control">
            <i class="glyphicon glyphicon-chevron-down"></i> Show
        </a>
    </span>
    <span data-bind="if: $data.Visible">
        <a href="#" data-bind="click: function() { $data.Visible(false); }" class="consol-link-control">
            <i class="glyphicon glyphicon-chevron-up"></i> Hide
        </a>
    </span>
</script>

<script id="Consolidation-Expander-Synopsis" type="text/html">
    <span class="consolidation-synposis" data-bind="if: Consolidations.length == 0">
        No Consolidations
    </span>

    <span class="consolidation-synposis" data-bind="if: Consolidations.length > 0">
        <span>
            Consolidated with
            <span data-bind="text: Consolidations.length"></span> other 
            <span data-bind="text: ExpanderLabel"></span>(s)
        </span>
    </span>
</script>

<script type="text/html" id="Product-Consolidation-Product-Widget">
    <div class="row">
        <div class="col-sm-10 col-xs-12">
            <table id="product-consolidation-widget" class="table product-consol">
                <tbody>
                <tr class="consol-primary active ">
                    <td>
                        <span data-bind="text: Title, tooltip: { 
                                        title: function() { return Title + ' (SPID: ' + ShopifyProductId + ')'; }
                                      }"></span>
                    </td>

                    <td><span data-bind="text: VendorText"></span></td>
                    <td><span data-bind="text: ActiveText"></span></td>
                    <td id="primary-product"><span style="white-space:nowrap;"><i class="glyphicon glyphicon-star-empty"></i> Primary</span></td>
                    <td>&nbsp;</td>
                </tr>

                <!-- ko if: ShowConsolidations -->
                <!-- ko foreach: Consolidations -->
                <tr>
                    <td class="overflow-gracefully">
                        <span data-bind="text: Title, tooltip: {
                                        title: function() { return Title + ' (SPID: ' + ShopifyProductId + ')'; } }"></span>
                    </td>
                    <td><span data-bind="text: VendorText"></span></td>
                    <td><span data-bind="text: ActiveText"></span></td>
                    <td><a href="#" data-bind="click: SetPrimary">Set to Primary</a></td>
                    <td><a href="#" data-bind="click: Deconsolidate"><i class="glyphicon glyphicon-remove"></i> Remove</a></td>
                </tr>
                <!-- /ko -->
                <!-- /ko -->

                <tr>
                    <td colspan="5">
                        <a href="#" 
                           id="add-new-product-consol"
                           class="consol-link-control"
                           data-bind="click: $parent.SearchForProductsPopup">
                            <i class="glyphicon glyphicon-plus"></i> Add Product
                        </a>

                        <span style="display: inline-block; width:10px;"></span>

                        <span data-bind="template: { name: 'Consolidation-Expander-Synopsis' }"></span>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</script>

<script type="text/html" id="Product-Consolidation-Variant-Widget">
    <div class="row">
        <div class="col-sm-10 col-xs-12">
            <table class="table product-consol">
                <tbody>
                <tr class="consol-primary active">
                    <td class="overflow-gracefully">
                        <span data-bind="text: SkuTitleText, tooltip: { title: SkuTitleText }"></span><br />
                    </td>
                    <td class="overflow-gracefully">
                        <span data-bind="text: Product.Title, tooltip: { title: Product.Title }"></span>
                    </td>
                    <td><span data-bind="text: ActiveText"></span></td>
                    <td class="primary-variant"><span style="white-space:nowrap;"><i class="glyphicon glyphicon-star-empty"></i> Primary</span></td>
                        <td>&nbsp;</td>
                    </tr>

                    <!-- ko if: ShowConsolidations -->
                    <!-- ko foreach: Consolidations -->
                    <tr>
                        <td class="overflow-gracefully">
                            <span data-bind="text: SkuTitleText, tooltip: { title: SkuTitleText }"></span><br />
                        </td>
                        <td class="overflow-gracefully">
                            <span data-bind="text:Product.Title, tooltip: { title: Product.Title }"></span>
                        </td>

                        <td><span data-bind="text: ActiveText"></span></td>
                        <td><a href="#" data-bind="click: SetPrimary">Set to Primary</a></td>
                        <td><a href="#" data-bind="click: Deconsolidate"><i class="glyphicon glyphicon-remove"></i> Remove</a></td>
                    </tr>
                    <!-- /ko -->
                    <!-- /ko -->

                    <tr>
                        <td colspan="5">
                            <span data-bind="visible: $parent.AddVariantVisible">
                                <a href="#" class="consol-link-control"
                                   data-bind="click: $parent.AddVariantConsolidationPopup">
                                    <i class="glyphicon glyphicon-plus"></i> Add Variant
                                </a>
                            </span>
                            <span style="display: inline-block; width:10px;"></span>
                            <span data-bind="template: { name: 'Consolidation-Expander-Synopsis' }"></span>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</script>

<script>
    var ProfitWise = ProfitWise || {};

    // parameters = exitcallback, editcogscallback
    ProfitWise.EditProductConsolidationModel = function (parameters) {
        var self = this;

        self.ExitCallback = parameters.exitcallback || function () { };
        self.EditCogsCallback = parameters.editcogscallback || function () { };
        self.ForceRequeryCallback = parameters.forcerequerycallback || function() { };

        self.PwMasterProductId = ko.observable(null);
        self.PrimaryProduct = ko.observable();
        self.PrimaryVariantGrid = ko.observable([]);

        self.MasterProductTitle = ko.computed(function() {
            return self.PrimaryProduct() ? self.PrimaryProduct().Title : "";
        });

        self.VariantTitle = ko.computed(function () {
            return self.PrimaryVariantGrid().length + " Variant(s)";
        });

        self.Refresh = function () {
            var productState = self.PrimaryProduct().ShowConsolidations();
            var masterVariantIds =
                AQ(self.PrimaryVariantGrid())
                    .where(function(item) { return item.ShowConsolidations(); })
                    .select(function (item) { return item.PwMasterVariantId; })
                    .toArray();

            flow.exec(
                function () {
                    self.RetrieveMasterProduct(self.PwMasterProductId(), this);
                },
                function () {
                    self.PrimaryProduct().ShowConsolidations(productState);

                    var grid = AQ(self.PrimaryVariantGrid());

                    AQ(masterVariantIds)
                        .each(function(id) {
                            var gridRow = grid.firstOrDefault(function(item) {
                                return item.PwMasterVariantId == id;
                            });
                            if (gridRow != null) {
                                gridRow.ShowConsolidations(true);
                            }
                        });
                });
        };

        self.RetrieveMasterProduct = function (pwMasterProductId, callback) {
            flow.exec(
                function () {
                    self.PwMasterProductId(pwMasterProductId);
                    var settings = new ProfitWiseFunctions.AjaxSettings();
                    var ajax = new ProfitWiseFunctions.Ajax(settings);
                    var url = "/ConsolService/MasterProduct?pwMasterProductId=" + self.PwMasterProductId();
                    ajax.HttpGet(url, this);
                },
                function (data) {
                    if (!data.product) {
                        self.ExitCallback();
                        return;
                    }
                    self.LoadModel(data);
                    if (callback) {
                        callback();
                    }
                });
        };

        var isPrimary = function (item) { return item.IsPrimary; }

        var isNotPrimary = function (item) { return !item.IsPrimary; }

        self.SetPrimaryProduct = function(model) {
            var settings = new ProfitWiseFunctions.AjaxSettings();
            var ajax = new ProfitWiseFunctions.Ajax(settings);
            var url = "/ConsolService/PrimaryProduct";
            var data = {
                pwMasterProductId: self.PwMasterProductId(),
                pwProductId: model.PwProductId,
            };
            ajax.HttpPost(url, data, self.Refresh);
        };

        self.DeconsolidateProduct = function(model) {
            var settings = new ProfitWiseFunctions.AjaxSettings();
            var ajax = new ProfitWiseFunctions.Ajax(settings);
            var url = "/ConsolService/DeconsolidateProduct";
            var data = { pwProductId: model.PwProductId };

            // A new Product will be spawned - this forces the parent form
            self.ForceRequeryCallback();
            ajax.HttpPost(url, data, self.Refresh);
        };

        self.SetPrimaryVariant = function (model) {
            var settings = new ProfitWiseFunctions.AjaxSettings();
            var ajax = new ProfitWiseFunctions.Ajax(settings);
            var url = "/ConsolService/PrimaryVariant";
            var data = {
                pwMasterVariantId: model.PwMasterVariantId,
                pwVariantId: model.PwVariantId,
            };
            ajax.HttpPost(url, data, self.Refresh);
        };

        self.DeconsolidateVariant = function (model) {
            var settings = new ProfitWiseFunctions.AjaxSettings();
            var ajax = new ProfitWiseFunctions.Ajax(settings);
            var url = "/ConsolService/DeconsolidateVariant";
            var data = {
                pwVariantId: model.PwVariantId,
            };
            ajax.HttpPost(url, data, self.Refresh);
        };

        // Model Factories
        var activeText = function(item) {
            return item.IsActive ? "Active" : "Inactive";
        };

        var idText = function (id) {
            return id || "(None)";
        };

        var tourStateJs = @Html.Raw(Context.CurrentUserTourStateJson());

        self.LoadModel = function (data) {
            self.PrimaryProduct(self.MasterProductModelFactory(data.product));

            if (data.product.length == 1) {
                if (tourStateJs[@TourIdentifiers.ShowProductConsolidationOne]) {
                    ProfitWiseFunctions.ShowTour(@TourIdentifiers.ShowProductConsolidationOne);
                    ProfitWise.AddProductConsolidationTour.start();
                    tourStateJs[@TourIdentifiers.ShowProductConsolidationOne] = false;
                }
            } else {
                if (tourStateJs[@TourIdentifiers.ShowProductConsolidationTwo]) {
                    ProfitWiseFunctions.ShowTour(@TourIdentifiers.ShowProductConsolidationTwo);
                    ProfitWise.ExistingProductConsolidationTour.start();
                    tourStateJs[@TourIdentifiers.ShowProductConsolidationTwo] = false;
                }
            }

            var masterVariants =
                AQ(data.variants)
                    .groupBy(function (item) { return item.PwMasterVariantId; })
                    .select(function (item) {
                        return self.MasterVariantModelFactory(item.values.toArray(), data.product);
                    })
                    .toArray();

            self.PrimaryVariantGrid(masterVariants);
        };

        self.MasterProductModelFactory = function(products) {
            var primaryProduct = AQ(products).first(isPrimary);
            primaryProduct.ShowConsolidations = ko.observable(true);
            primaryProduct.Consolidations = AQ(products).where(isNotPrimary).toArray();
            primaryProduct.ActiveText = activeText(primaryProduct);
            primaryProduct.ShopifyProductIdText = idText(primaryProduct.ShopifyProductId);
            primaryProduct.ExpanderLabel = "Product";

            AQ(primaryProduct.Consolidations).each(function(item) {
                item.SetPrimary = self.SetPrimaryProduct;
                item.Deconsolidate = self.DeconsolidateProduct;
                item.ActiveText = activeText(item);
                item.ShopifyProductIdText = idText(item.ShopifyProductId);
            });

            return primaryProduct;
        };

        var skuTitle = function(item) {
            return (item.Sku || "(No SKU)") + ' - ' + (item.Title);
        }

        self.MasterVariantModelFactory = function (variants, products) {
            var productIdFinder = function (id) {
                return AQ(products).firstOrDefault(function (x) { return x.PwProductId == id; });
            };

            var primaryVariant = AQ(variants).first(isPrimary);
            primaryVariant.Consolidations = AQ(variants).where(isNotPrimary).toArray();
            primaryVariant.ShowConsolidations = ko.observable(true);
            primaryVariant.ActiveText = activeText(primaryVariant);
            primaryVariant.ExpanderLabel = "Variant";
            primaryVariant.Product = productIdFinder(primaryVariant.PwProductId);
            primaryVariant.ShopifyVariantIdText = idText(primaryVariant.ShopifyVariantId);
            primaryVariant.SkuTitleText = skuTitle(primaryVariant);

            AQ(primaryVariant.Consolidations).each(function (item) {
                item.SetPrimary = self.SetPrimaryVariant;
                item.Deconsolidate = self.DeconsolidateVariant;
                item.ActiveText = activeText(item);
                item.ShopifyVariantIdText = idText(item.ShopifyVariantId);
                item.Product = productIdFinder(item.PwProductId);
                item.SkuTitleText = skuTitle(item);

            });

            return primaryVariant;
        };

        self.SearchForProductsPopup = function () {
            var url = ProfitWiseConfig.BaseUrl +
                '/Cogs/ProductConsolidationSearch?pwMasterProductId=' + self.PwMasterProductId();

            ProfitWiseShopify.LaunchModal({
                src: url,
                title: 'Search for Products to Consolidate with ' + self.MasterProductTitle(),
                width: 'large',
                height: 500,
            }, function (data) {
                self.Refresh();
            });
        }

        self.AddVariantVisible = ko.computed( function () { return self.PrimaryVariantGrid().length > 1; } );

        self.AddVariantConsolidationPopup = function(item) {
            var url = ProfitWiseConfig.BaseUrl +
                '/Cogs/AddVariantToConsolidation?' +
                    'pwMasterVariantId=' + item.PwMasterVariantId +
                    '&pwMasterProductId=' + self.PwMasterProductId();

            ProfitWiseShopify.LaunchModal({
                src: url,
                title: 'Variant Consolidation with ' + item.SkuTitleText,
                width: 'large',
                height: 500,
            }, function(data) {
                self.Refresh();
            });
        };

        return self;
    };

    var steps1 = [
        {
        	orphan: true,
        	title: "Product Consolidation",
        	content: "Product consolidation is an advanced topic, which will be best understood by carefully reading through the ProfitWise documentation.",
        	placement: 'bottom',
        },
        {
            element: "#add-new-product-consol",
            title: "Add Product to Consolidation",
            content: "If you're already familiar with consolidation, you can click here to select one or more products to consolidate with the currently selected product.",
            placement: 'bottom',
        },
    ];

    var steps2 = [
		{
		    element: "#product-consolidation-widget",
		    title: "Product Consolidation",
			content: "Your selected product consolidations are shown here.",
			placement: 'bottom',
		},
		{
		    element: "#primary-product",
			title: "Primary Product",
			content: "This marker identities the Primary product, which determines the Product Title that is displayed in ProfitWise reports. You can set another product to Primary, and to remove any product from the consolidation, as well.",
			placement: 'bottom',
		},
		{
		    element: "#variant-consolidation-widget",
		    title: "Variant Consolidations",
			content: "Your selected variant consolidations are shown here.",
			placement: 'top',
		},
		{
			element: ".primary-variant",
			title: "Primary Variant",
			content: "This marker identities the Primary variant, which determines the Variant Title that is displayed in ProfitWise reports. You can set another variant to Primary, and to remove any variant from the consolidation, as well.",
			placement: 'bottom',
		},
    ];

    ProfitWise.AddProductConsolidationTour = ProfitWiseFunctions.TourFactory(steps1);
    ProfitWise.ExistingProductConsolidationTour = ProfitWiseFunctions.TourFactory(steps2);
</script>

