@using ProfitWise.Data.Model.Cogs.UploadObjects;
@using ProfitWise.Web.Plumbing
@model ProfitWise.Web.Models.WelcomeModel
@{
    Layout = "~/Views/Shared/_PageLayout.cshtml";
}

@Html.Partial("_IsDataLoadedAlert")

@Scripts.Render("~/Bundles/FileUpload")
@Styles.Render("~/StyleBundles/FileUpload")


<div class="system-page shadow" style="text-align: center;">
    
    <div style="max-width: 200px; margin-left: auto; margin-right: auto;">
        <img src="@GlobalConfig.BaseUrl/Content/images/Logo400x101HighRes.jpg"
             class="img-responsive"  />        
    </div>

    <div style="height: 25px;"></div>

    <h2 class="header">Bulk CoGS Upload</h2>
    <h4>Upload your Cost of Goods data in a comma-delimited (CSV) file.</h4>

    <div class="below-header-spacer"></div>

    <div class="system-page-content">    
        <div data-bind="ifnot: ProcessingUpload">
            <div data-bind="if: PreviousUploadResult">
                <div class="alert alert-info"
                     data-bind="with: PreviousUploadResult">

                    <div data-bind="if: UploadStatus == @UploadStatusCode.Success"
                            style="text-align: center;">
                        <strong>Your previous CoGS Bulk Import finished!</strong>

                        <div>
                            <span>Your upload finished processing at</span>
                            <span data-bind="text: LastUpdatedAt"></span>;
                            <span data-bind="text: RowsProcessed"></span>
                            <span>out of the</span>
                            <span data-bind="text: TotalNumberOfRows"></span> rows of data were successfully loaded.
                        </div>

                        <div data-bind="if: RowsProcessed != TotalNumberOfRows">
                            <a href="#" data-bind="attr: { href: FeedbackFileUrl }">Click here to download a feedback file.</a>
                        </div>
                    </div>

                    <div data-bind="if: UploadStatus == @UploadStatusCode.FailureSystemFault ||
                                        UploadStatus == @UploadStatusCode.FailureZombied"
                         style="text-align: center;">
                        <strong>Your previous CoGS Bulk Import failed!</strong>
                        <div>
                            Feel free to contact <a href="@GlobalConfig.BuildUrl("/Content/Contact")">ProfitWise Support</a>
                            to assist you loading your data using Bulk Import.
                        </div>
                    </div>
                    
                    <div data-bind="if: UploadStatus == @UploadStatusCode.FailureTooManyErrors"
                         style="text-align: center;">
                        <strong>Your previous CoGS Bulk Import failed due to too many errors!</strong>
                        <div>
                            Your upload finished processing at <span data-bind="text: LastUpdatedAt"></span>;
                            a total of <span data-bind="text: RowsProcessed"></span> out of
                            <span data-bind="text: TotalNumberOfRows"></span> rows of data were processed.
                        </div>
                        <div>
                            <a href="#" data-bind="attr: { href: FeedbackFileUrl }">Click here to download a feedback file.</a>
                        </div>
                    </div>
                    
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body" style="padding: 50px;">
                    <p style="text-align: center;">
                        <strong>The process of bulk updating your ProfitWise Cost of Goods data in a CSV file is easy!</strong>
                        <br/>
                        Start by downloading the Excel template and entering your CoGS data.
                        Once you're ready, hit the "Upload CoGS" button to proceed.
                        If this is your first time, you may read through
                        <a href="#help">detailed instructions below</a>.
                        If you have any questions, you can always reach out to the
                        <a href="@GlobalConfig.BuildUrl("/Content/Contact")">ProfitWise Support Team</a>.
                    </p>

                    <a href="#" data-bind="click: function() { DownloadTemplate('download-caddy'); }"
                       class="btn btn-primary" style="width: 225px;">
                        <i class="glyphicon glyphicon-arrow-down"></i>
                        Download XLS Template
                    </a>
                    <iframe id="download-caddy" style="display: none;"></iframe>

                    <span data-bind="template: { name: 'Upload-Panel', data: $data, afterRender: function() { InitializeUpload('#bulk-cogs-upload'); } }">
                    </span>

                    <div style="height: 25px;"></div>

                    <p style="font-weight: bold; text-align: center; color: #F00;">
                        WARNING: using Bulk CoGS Upload will overwrite existing data, including any CoGS detailed date entries.

                        <br />
                        <span style="font-weight: normal;">
                            If you'd like avoid making changes to a Variant's CoGS, delete those rows from your CSV file. More info below...
                        </span>                    
                    </p>
                </div>
            </div>
        </div>
        
        <div data-bind="if: ProcessingUpload">
            <div class="panel panel-default">
                <div class="panel-body" style="padding: 50px;">
                    <p style="text-align: center;">
                        <img src="@GlobalConfig.BuildUrl("/Content/images/spinner.gif")"
                             style="width: 75px;" />
                        <div style="height: 15px;"></div>
                        <strong>ProfitWise is processing your file upload</strong>
                        <br />
                        Depending on the size of your file, it may take ProfitWise up to 10 minutes to
                        process your Cost of Goods file upload. Stay tuned!
                    </p>
                </div>
            </div>
        </div>

        <div style="height: 25px;"></div>
        <a name="help"></a>

        <div class="panel panel-default">
            <div class="panel-body" style="padding: 50px;">
                <h4 class="subtitle-header">Uploading your Cost of Goods Data to ProfitWise</h4>

                <div style="height: 25px;"></div>

                <p style="font-weight: bold;">Getting started</p>

                <p>Start with downloading the template by hitting the "Download XLS Template" button.
                    The template will come preloaded with your store's entire catalog of Products and Variants.
                    If you have multiple Variants consolidated, the download template will only include information e.g. Title, Price, CoGS for the Primary Variant.
                    You can edit this file using Excel or Google Sheets.
                </p>
                <p> There are only 3 columns you'll ever need to alter (more on this below): the Margin Percent, the Fixed Amount
                    and the Abbreviation (currency) columns - depending on which method you choose.
                    The PwMasterVariantId column is used internally by ProfitWise and must not be altered.
                    All of the other columns are for display purposes only, to help verify your data entry.                    
                </p>

                <p style="font-weight: bold;">Excluding CoGS from the update</p>

                <p><em>Important:</em> This process overwrites existing CoGS data. 
                    If you <strong>do not</strong> want to update a Product Variant, delete that row 
                    entirely from the spreadsheet before uploading, and ProfitWise will skip it altogether.
                </p>
                
                <p style="font-weight: bold;">Entering CoGS as a Margin Percent</p>

                <p>To enter data as a Margin Percent, enter percentages as decimals (i.e. enter 0.15 for 15%) under the MarginPercent column.
                </p>

                <p style="font-weight: bold;">Entering CoGS as a Fixed Amount</p>
                <p>To enter data as a Fixed Amount, you'll use the FixedAmount and Abbreviation columns.
                    The "Abbreviation" column is for specifying the currency for your Cost of Goods values.
                    ProfitWise accepts the following currencies: <em>USD, EUR, JPY, GBP, AUD, CHF, CAD, AED.</em>
                    Enter the fixed CoGS amount for the appropriate currency in the FixedAmount column.
                    Do not include currency symbols e.g. enter 55.00, and not $55.00. 
                </p>

                <p style="font-weight: bold;">Finishing up</p>
                <p>Once you have completed entry of your data, save as a comma-delimited (.CSV) file.
                    Finally, upload your file to ProfitWise and allow up to 10 minutes for ProfitWise
                    to import your data.</p>
            </div>
        </div>
    </div>
</div>

<script type="text/html" id="Upload-Panel">
    <span style="width: 225px;" class="btn btn-primary fileinput-button">
        <i class="glyphicon glyphicon-file"></i> Upload CoGS
        <input id="bulk-cogs-upload" type="file" name="files[]" multiple>
    </span>
</script>

<script>
    var ProfitWise = ProfitWise || {};

    ProfitWise.CreateFileUpload = function (launchSelector, uploadUrl, postSuccessFunc) {
        'use strict';
        $(launchSelector).fileupload({
            url: uploadUrl,
            autoUpload: true,
            add: function (e, data) {
                data.submit();
            },
            start: function () {
            },
            success: function (response, status) {
                postSuccessFunc(response, status);
            },
            fail: function (e, data) {
                alert('Something went wrong while attempting to upload your file. Please contact support if the issue persists.');
            },
            progress: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#progress .progress-bar').css('width', progress + '%');
            },
            stop: function () {
                //alert("stop");
                //EnableFunctions.HideLoading();
            },
        }).prop('disabled', !$.support.fileInput)
            .parent()
            .addClass($.support.fileInput ? undefined : 'disabled');
    };

    ProfitWise.UploadModel = function () {
        var self = this;

        self.DownloadTemplate = function (downloadIframeId) {
            var url = '@GlobalConfig.BuildUrl("/Cogs/UploadTemplate")';
            document.getElementById(downloadIframeId).src = url;
        };

        self.InitializeUpload = function () {
            ProfitWise.CreateFileUpload(
                '#bulk-cogs-upload',
                '@GlobalConfig.BuildUrl("/CogsService/UploadCostOfGoods")',
                function () { self.UploadComplete(); });
        };
        
        self.UploadComplete = function () {
            self.ProcessingUpload(true);
            self.PingUploadStatus();
        };
        
        self.ProcessingUpload = ko.observable(false);        
        self.PreviousUploadResult = ko.observable();

        self.PingUploadStatus = function (callback) {
            flow.exec(
                function () {
                    var settings = new ProfitWiseFunctions.AjaxSettings();
                    settings.UseSpinner = false;
                    settings.ErrorCallbackFunction = null;

                    var ajax = new ProfitWiseFunctions.Ajax(settings);
                    ajax.HttpGet("/CogsService/UploadStatus", this);
                },
                function (data) {
                    console.log(data);

                    self.ProcessingUpload(data.IsProcessing);
                    self.PreviousUploadResult(data.PreviousUploadResult);
                    
                    if (callback) {
                        callback();
                    }
                });
        };

        self.Initialize = function () {
            flow.exec(
                function () {
                    self.PingUploadStatus(this);
                },
                function () {
                    var pingInteralMilliseconds = 5000;    // Please do not change!
                    setInterval(self.PingUploadStatus, pingInteralMilliseconds);
                });
        };

        return self;
    };

    $(document).ready(function () {
        var model = new ProfitWise.UploadModel();
        ko.applyBindings(model);
        model.Initialize();
    });
</script>

